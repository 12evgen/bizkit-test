{"version":3,"sources":["utils/storage.js","assets/images/logo.png","services/axios.js","store/ErrorStore.js","store/UserStore.js","store/LanguageStore.js","store/MobileMenuStore.js","store/CompaniesStore.js","store/ModalStore.js","store/index.js","utils/htmlClass.js","containers/shared/Notifications/Notifications.js","components/Modal/Modal.js","translations/validationErrors.messages.js","containers/company/CompanyCreateForm/CompanyCreateForm.js","containers/modals/CompanyCreateModal/CompanyCreateModal.js","containers/modals/Modals.js","decorators/PrivateRoute/PrivateRoute.js","decorators/PublicRoute/PublicRoute.js","containers/shared/Topbar/Topbar.js","containers/shared/AsideMenu/AsideMenu.js","components/Title/Title.js","containers/company/CompaniesFilter/CompaniesFilter.js","containers/company/CompaniesTable/CompaniesTable.js","pages/CompaniesList/CompaniesList.js","components/TabPanel/TabPanel.js","containers/company/CompanyMainDetailsForm/CompanyMainDetailsForm.js","containers/company/CompanyLegalDetailsForm/CompanyLegalDetailsForm.js","containers/company/CompanyInfo/CompanyInfo.js","containers/company/CompanyBankDetailsTable/CompanyBankDetailsTable.js","pages/CompanyContent/CompanyContent.js","pages/NotFound/NotFound.js","decorators/MainDecorator/MainDecorator.js","containers/shared/LoginForm/LoginForm.js","pages/Login/Login.js","Localizer.js","theme.js","decorators/index.js","utils/addMainClasses.js","serviceWorker.js","index.js"],"names":["getObject","key","JSON","parse","this","getItem","setObject","value","Object","setItem","stringify","e","Store","storage","Storage","prototype","get","undefined","set","remove","removeItem","clear","LocalStore","window","localStorage","module","exports","Api","axios","create","withCredentials","baseURL","timeout","headers","Authorization","auth_token","post","delete","put","interceptors","request","use","config","token","UserStore","authToken","error","Promise","reject","response","err","status","message","errors","push","observable","array","action","bound","extendObservable","user","isProfileLoading","isLoading","isUserLogged","autorun","_","isEmpty","verifyUser","then","getDetails","catch","runInAction","resp","data","loaded","params","email","password","authenticationData","console","log","storeTokens","fb","ErrorStore","addError","access","resolve","language","isOpenMobileMenu","companyList","companyListByFilter","companyDetails","bankList","bankDetails","enableFilterCompanies","filterCompanies","name","filter","list","city","region","tracks","results","id","details","getCompanyList","newData","getCompanyDetails","companyId","bankDetailListForCompany","typeFilter","re","RegExp","escapeRegExp","currentFilter","result","test","type","resultFilter","allFilter","count","keys","forEach","item","i","length","intersectionBy","modals","companyCreate","open","args","modal","stores","userStore","languageStore","LanguageStore","errorStore","mobileMenuStore","MobileMenuStore","companiesStore","CompaniesStore","modalStore","ModalStore","AppContext","React","has","elem","classNames","classNamesArray","normalizeClassNamesArgument","className","l","createClassNameRegexp","add","replace","trim","originClassNames","classNameRegexp","originClassNamesArray","split","classNameOrigin","Notifications","observer","props","useContext","toast","join","onClose","position","transition","Slide","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","injectIntl","DialogTitle","withStyles","theme","root","margin","padding","closeButton","right","spacing","top","color","palette","grey","children","classes","other","disableTypography","IconButton","aria-label","onClick","Modal","handleClose","Dialog","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","DialogContent","dividers","defaultProps","defineMessages","validationErrorRequired","defaultMessage","validationErrorRequiredFile","validationError0","validationErrorRequiredAgeAndPolicyChecked","validationErrorRequiredImageField","validationErrorMinlength","validationErrorMaxlength","validationErrorWrongLength","validationErrorMin","validationErrorMax","validationErrorPattern","validationErrorEmail","validationErrorDuplicated","validationErrorPhone","validationErrorNumber","validationErrorDate","validationErrorMaxSize","validationErrorZip","validationErrorFormat","validationErrorSame","validationErrorPasswordPattern","validationErrorPpasswordLength","validationErrorNickname","validationErrorUsername","validationErrorPhoneNumber","validationErrorValid","validationErrorComment","validationErrorDelete","useStyles","makeStyles","title","marginBottom","textAlign","CompanyCreateForm","useForm","handleSubmit","register","intl","useIntl","noValidate","onSubmit","createCompany","close","success","map","Typography","variant","gutterBottom","Grid","container","xs","md","TextField","label","fullWidth","inputRef","required","formatMessage","validationMessages","helperText","shortname","bin_iin","phone","multiline","rows","Button","CompanyCreateModal","Modals","PrivateRoute","Component","component","rest","render","to","pathname","PublicRoute","preloader","appBar","breakpoints","up","width","marginLeft","menuButton","marginRight","display","toolbar","justifyContent","Topbar","Fragment","CssBaseline","AppBar","Toolbar","edge","triggerMobileMenu","noWrap","startIcon","drawer","flexShrink","mixins","drawerPaper","logo","AsideMenu","useTheme","src","require","alt","List","ListItem","button","ListItemIcon","ListItemText","logout","primary","document","body","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","smDown","useEffect","addPageClassToBody","removePageClassFromBody","page","htmlClass","content","rel","href","allOptions","form","reset","alignItems","formControl","minWidth","CompaniesFilter","control","row","uniqOptions","Array","from","Set","sm","onChange","target","setFilter","defaultValue","FormControl","InputLabel","Select","labelId","autoWidth","MenuItem","event","resetFilter","columns","actions","CompaniesTable","useState","setPage","rowsPerPage","setRowsPerPage","setOpen","idRemove","setIdRemove","confirmModalDelete","DialogActions","deleteCompany","autoFocus","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","TableBody","slice","hover","role","tabIndex","align","Tooltip","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","CompaniesList","index","hidden","aria-labelledby","Box","p","CompanyMainDetailsForm","company","workscope","description","as","rules","CompanyLegalDetailsForm","registered_name","registered_type","leader","leader_position","registered_address","address","tax_payer","FormControlLabel","Switch","checked","CompanyInfo","methods","updateCompany","CompanyBankDetailsTable","loading","setLoading","localization","editRow","deleteText","field","editable","onRowAdd","setTimeout","addBankDetail","onRowUpdate","oldData","updateBankDetail","onRowDelete","deleteBankDetail","a11yProps","flexGrow","backgroundColor","background","CompanyContent","useParams","setValue","Tabs","newValue","indicatorColor","textColor","Tab","memo","height","down","MainDecorator","exact","path","NotFound","flexDirection","maxWidth","marginTop","submit","LoginForm","showPassword","setShowPassword","cleanError","onTogglePassword","elevation","square","login","htmlFor","OutlinedInput","pattern","autoComplete","FormHelperText","endAdornment","InputAdornment","onMouseDown","minLength","number","Login","Intl","PluralRules","RelativeTimeFormat","messages","en","ru","Localizer","locale","propTypes","PropTypes","element","isRequired","string","createMuiTheme","main","AppRoot","ThemeProvider","userAgent","navigator","match","addMainClasses","Boolean","location","hostname","history","createHistory","ReactDOM","Provider","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"iGAAA,SAASA,EAAUC,GACjB,OAAOC,KAAKC,MAAMC,KAAKC,QAAQJ,IAAQ,MAGzC,SAASK,EAAUL,EAAKM,GACtB,GAAIA,GAASA,aAAiBC,OAC5B,IACEJ,KAAKK,QAAQR,EAAKC,KAAKQ,UAAUH,IACjC,MAAOI,KAWb,SAASC,EAAMC,GACbT,KAAKS,QAAUA,EACfT,KAAKS,QAAQb,UAAYA,EACzBI,KAAKS,QAAQP,UAAYA,EARJ,qBAAZQ,UACTA,QAAQC,UAAUf,UAAYA,EAC9Bc,QAAQC,UAAUT,UAAYA,GAShCM,EAAMG,UAAY,CAChBC,IADgB,SACZf,GACF,OAAOG,KAAKS,QAAQR,QAAQJ,SAAQgB,GAEtCC,IAJgB,SAIZjB,EAAKM,GACc,qBAAVA,GACTH,KAAKS,QAAQJ,QAAQR,EAAKM,IAG9BP,UATgB,SASNC,GACR,MAAyC,oBAA3BG,KAAKS,QAAQb,UACvBI,KAAKS,QAAQb,UAAUC,GACvBC,KAAKC,MAAMC,KAAKS,QAAQR,QAAQJ,IAAQ,OAE9CK,UAdgB,SAcNL,EAAKM,GACyB,oBAA3BH,KAAKS,QAAQP,UAEtBF,KAAKS,QAAQP,UAAUL,EAAKM,GAE5BH,KAAKS,QAAQJ,QAAQR,EAAKC,KAAKQ,UAAUH,KAG7CY,OAtBgB,SAsBTlB,GACLG,KAAKS,QAAQO,WAAWnB,IAE1BoB,MAzBgB,WA0BdjB,KAAKS,QAAQQ,UAIjB,IAAMC,EAAa,IAAIV,EAAMW,OAAOC,cAEpCC,EAAOC,QAAU,CACfJ,e,mjaC1DFG,EAAOC,QAAU,IAA0B,kC,6LCIrCC,EAAMC,IAAMC,OAAO,CACvBC,iBAAiB,EACjBC,QAAS,6BACTC,QAAS,IACTC,QAAS,CACPjB,IAAK,CACHkB,cAAc,UAAD,OAAYZ,aAAWtB,UAAU,eAAemC,aAE/DC,KAAM,CACJF,cAAc,UAAD,OAAYZ,aAAWtB,UAAU,eAAemC,aAE/DE,OAAQ,CACNH,cAAc,UAAD,OAAYZ,aAAWtB,UAAU,eAAemC,aAE/DG,IAAK,CACHJ,cAAc,UAAD,OAAYZ,aAAWtB,UAAU,eAAemC,gBAKnER,EAAIY,aAAaC,QAAQC,KACvB,SAAAC,GACE,IAAMC,EAAQC,EAAUC,UAKxB,OAJIF,IACFD,EAAOT,QAAQC,cAAf,iBAAyCS,IAGpCD,KAET,SAAAI,GAAK,OAAIC,QAAQC,OAAOF,MAG1BnB,EAAIY,aAAaU,SAASR,KACxB,SAAAQ,GAAQ,OAAIA,KACZ,SAAAC,GACE,GAAIA,GAAOA,EAAID,SACb,OAAQC,EAAID,SAASE,QACnB,KAAK,IACHD,EAAIE,QAAU,MACd,MACF,KAAK,IACHF,EAAIE,QAAU,MACd,MACF,QACEF,EAAIE,QAAJ,WAAkBF,EAAID,SAASE,OAA/B,WAGJD,EAAIE,QAAU,WAGhB,OAAOL,QAAQC,OAAOE,MAIXvB,I,wBAAAA,I,SC5CA,G,OAAA,I,qIATImB,GACf1C,KAAKiD,OAAOC,KAAKR,K,8BAIjB1C,KAAKiD,OAAOhC,Y,yCAPbkC,K,yEAAoBA,IAAWC,W,oCAE/BC,K,sGAIAA,K,sECsHY,M,EApDZA,IAAOC,M,aApER,aAAe,IAAD,2BACZC,YAAiBvD,KAAM,CACrBwD,KAAM,GACNC,kBAAkB,EAClBC,WAAW,EACXC,cAAc,EACdjB,MAAO,GACPD,UAAW,KAGbmB,aAAQ,WACDC,IAAEC,QAAQ5C,aAAWtB,UAAU,iBAWlC,EAAK+D,cAAe,EACpB,EAAKF,kBAAmB,GAXxB,EAAKM,aACFC,MAAK,WACJ,EAAKC,gBAENC,OAAM,SAAAxB,GACLyB,aAAY,WACV,EAAKzB,MAAQA,EAAMM,iB,yDAWjB,IAAD,OACX,OAAOzB,EAAIS,KAAK,gBAAiB,CAACO,MAAOrB,aAAWtB,UAAU,eAAemC,aAC1EiC,MAAK,SAAAI,GAEJ,OADeA,EAARC,QAGRH,OAAM,SAAAxB,GACLyB,aAAY,WACV,EAAKzB,MAAQA,EAAMM,gB,mCAMb,IAAD,OAEX,OADAhD,KAAK0D,WAAY,EACVnC,EAAIX,IAAI,aACZoD,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KASP,OAPAF,aAAY,WACV,EAAKX,KAAOa,EACZ,EAAKX,WAAY,EACjB,EAAKC,cAAe,EACpB,EAAKF,kBAAmB,EACxB,EAAKD,KAAKc,QAAS,KAEdD,KAERH,OAAM,SAAAxB,GACLyB,aAAY,WACV,EAAKT,WAAY,EACjB,EAAKC,cAAe,EACpB,EAAKF,kBAAmB,EACxB,EAAKf,MAAQA,EAAMM,gB,4BAMrBuB,GAAS,IAAD,OAEPC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,SACZzE,KAAK0D,WAAY,EAEjB,IAAMgB,EAAqB,CACzBF,MAAOA,EACPC,SAAUA,GAGZlD,EAAIS,KAAK,SAAU0C,GAChBV,MAAK,SAAAI,GAEJO,QAAQC,IAAI,OAAQR,GACpB,EAAKS,YAAYT,EAAKC,MAAML,MAAK,SAAAc,GAE/B,OADA,EAAKb,aACEG,QAGVF,OAAM,SAAAxB,GACLyB,aAAY,WACV,EAAKT,WAAY,EACjB,EAAKhB,MAAQA,EACbqC,EAAWC,SAAS,mH,kCAMhBX,GAOV,OANArE,KAAKyC,UAAY4B,EAAKY,OAEtB/D,aAAWhB,UAAU,cAAe,CAClC6B,WAAYsC,EAAKY,SAGZtC,QAAQuC,Y,+BAMf,OADAlF,KAAK2D,cAAe,EACbzC,aAAWH,OAAO,iB,mCAKzBf,KAAK0C,MAAQ,O,2CAxFdW,K,6GAcAA,K,oNAuDAA,K,0GAWAA,K,yGAMAA,K,0EC7GY,M,6IANElD,GACbH,KAAKmF,SAAWhF,EAChBiB,aAAaf,QAAQ,WAAYF,O,2CALlCgD,K,yEAAsB/B,aAAanB,QAAQ,aAAe,Q,0CAE1DoD,K,8ECWY,M,0JATXrD,KAAKoF,kBAAoBpF,KAAKoF,mB,wCAK9BpF,KAAKoF,kBAAmB,M,mDATzBjC,K,yEAA8B,K,6CAE9BE,K,yHAKAA,K,+ECuQY,M,aA5Qb,aAAe,oBACbE,YAAiBvD,KAAM,CACrBqF,YAAa,GACbC,oBAAqB,KACrBC,eAAgB,GAChBC,SAAU,GACVC,YAAa,GACb/C,MAAO,GACPgD,uBAAuB,EACvBC,gBAAiB,CACfC,KAAM,CACJC,QAAQ,EACRC,KAAM,IAERC,KAAM,CACJF,QAAQ,EACRC,KAAM,IAERE,OAAQ,CACNH,QAAQ,EACRC,KAAM,IAERG,OAAQ,CACNJ,QAAQ,EACRC,KAAM,O,6DAOI,IAAD,OAEf,OADA9F,KAAK0D,WAAY,EACVnC,EAAIX,IAAI,cACZoD,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAMP,OAJAF,aAAY,WACV,EAAKkB,YAAchB,EAAK6B,QACxB,EAAKxC,WAAY,KAEZW,KAERH,OAAM,SAAAxB,GACLyB,aAAY,WACV,EAAKT,WAAY,EACjB,EAAKhB,MAAQA,EAAMM,gB,wCAMTmD,GAAK,IAAD,OAEpB,OADAnG,KAAK0D,WAAY,EACVnC,EAAIX,IAAJ,oBAAqBuF,IACzBnC,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAKP,OAHAF,aAAY,WACV,EAAKoB,eAAiBlB,KAEjBA,KAERH,OAAM,SAAAxB,GACLyB,aAAY,WACV,EAAKzB,MAAQA,EAAMM,gB,oCAMboD,GAAU,IAAD,OACrB,OAAO7E,EAAIS,KAAK,aAAcoE,GAC3BpC,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAEP,OADA,EAAKgC,iBACEhC,KAERH,OAAM,SAAAxB,GACL,OAAOC,QAAQC,OAAOF,EAAMG,SAASwB,W,oCAK7B8B,GAAK,IAAD,OAChB,OAAO5E,EAAIU,OAAJ,oBAAwBkE,EAAxB,MACJnC,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAEP,OADA,EAAKgC,iBACEhC,KAERH,OAAM,SAAAxB,GACL,OAAOC,QAAQC,OAAOF,EAAMG,SAASwB,W,oCAK7B8B,EAAIG,GAAU,IAAD,OACzB,OAAO/E,EAAIW,IAAJ,oBAAqBiE,EAArB,KAA4BG,GAChCtC,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAEP,OADA,EAAKkC,kBAAkBJ,GAChB9B,KAERH,OAAM,SAAAxB,GACL,OAAOC,QAAQC,OAAOF,EAAMG,SAASwB,W,+CAKlB8B,GAAK,IAAD,OAC3B,OAAO5E,EAAIX,IAAJ,oBAAqBuF,EAArB,kBACJnC,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAKP,OAHAF,aAAY,WACV,EAAKqB,SAAWnB,EAAK6B,WAEhB7B,KAERH,OAAM,SAAAxB,GACL,OAAOC,QAAQC,OAAOF,Q,oCAKd8D,EAAWf,GAAc,IAAD,OACpC,OAAOlE,EAAIS,KAAJ,oBAAsBwE,EAAtB,kBAAiDf,GACrDzB,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAGP,OADA,EAAKoC,yBAAyBD,GACvBnC,KAERH,OAAM,SAAAxB,GACL,OAAOC,QAAQC,OAAOF,Q,uCAKX8D,EAAWf,GAAc,IAAD,OACvC,OAAOlE,EAAIW,IAAJ,oBAAqBsE,EAArB,yBAA+Cf,EAAYU,GAA3D,KAAkEV,GACtEzB,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAGP,OADA,EAAKoC,yBAAyBD,GACvBnC,KAERH,OAAM,SAAAxB,GACL,OAAOC,QAAQC,OAAOF,Q,uCAKX8D,EAAWf,GAAc,IAAD,OACvC,OAAOlE,EAAIU,OAAJ,oBAAwBuE,EAAxB,yBAAkDf,EAAYU,GAA9D,KAAqEV,GACzEzB,MAAK,SAAAI,GAAS,IACNC,EAAQD,EAARC,KAGP,OADA,EAAKoC,yBAAyBD,GACvBnC,KAERH,OAAM,SAAAxB,GACL,OAAOC,QAAQC,OAAOF,Q,gCAKlBvC,EAAOuG,GACf,IAAMC,EAAK,IAAIC,OAAO/C,IAAEgD,aAAa1G,GAAQ,KACvC2G,EAAgB9G,KAAK2F,gBAAgBe,GAe3CI,EAAcjB,SAAW1F,EAErB2G,EAAcjB,OAChBiB,EAAchB,KAAOjC,IAAEgC,OAAO7F,KAAKqF,aAhBrB,SAAA0B,GACd,MAAmB,SAAfL,EACKC,EAAGK,KAAKD,EAAOnB,MAEL,SAAfc,EACKC,EAAGK,KAAKD,EAAOhB,MAEL,WAAfW,EACKC,EAAGK,KAAKD,EAAOf,QAEjBW,EAAGK,KAAKD,EAAOd,WAQtBa,EAAchB,KAAO,GAGvB9F,KAAK6F,OAAOa,GAAaI,EAAcjB,U,6BAIlCoB,EAAMlG,GAAS,IAAD,OACfmG,EAAe,GACbC,EAAY,GACdC,EAAQ,EACZpH,KAAK0F,uBAAwB,EAE7BtF,OAAOiH,KAAKrH,KAAK2F,iBAAiB2B,SAAQ,SAACC,EAAMC,GAC/C,IAAM3B,EAAS,EAAKF,gBAAgB4B,GAChC1B,EAAOC,KAAK2B,OAAS,IAEvBL,IACAD,EAAUjE,KAAK2C,EAAOC,UAItB9F,KAAK2F,gBAAgBsB,GAAMpB,QAAoB,IAAVuB,EACvCF,EAAelH,KAAK2F,gBAAgBsB,GAAMnB,MAE5B,IAAVsB,IAGEF,EAFS,SAATD,GAA4B,SAATA,EACjBlG,EACaf,KAAKqF,YAELxB,IAAE6D,eAAe1H,KAAKqF,YAAa8B,EAAU,GAAI,MAGnDnH,KAAKqF,aAGV,IAAV+B,IACFF,EAAerD,IAAE6D,eAAe1H,KAAKqF,YAAa8B,EAAU,GAAI,OAEpD,IAAVC,IACFF,EAAerD,IAAE6D,eAAe1H,KAAKqF,YAAa8B,EAAU,GAAIA,EAAU,GAAI,OAElE,IAAVC,IACFF,EAAerD,IAAE6D,eAAe1H,KAAKqF,YAAa8B,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI,QAgBhGnH,KAAKsF,oBAAsB4B,I,oCAK3BlH,KAAK0F,uBAAwB,I,8BAK7B1F,KAAKuF,eAAiB,K,mCAKtBvF,KAAK0C,MAAQ,O,+CA1OdW,K,wHAqBAA,K,uHAmBAA,K,mHAaAA,K,mHAaAA,K,8HAaAA,K,8HAgBAA,K,sHAcAA,K,yHAcAA,K,kHAcAA,K,wGA6BAA,K,0GAwDAA,K,yGAKAA,K,wGAKAA,K,0ECxOY,M,EAtBZA,IAAOC,M,EAMPD,IAAOC,M,aAhBR,aAAe,oBACbC,YAAiBvD,KAAM,CACrB2H,OAAQ,CACNC,cAAe,CACbC,MAAM,M,kDAORZ,GAEJ,OADAjH,KAAK2H,OAAOV,GAAMY,MAAO,EAClB7H,KAAK2H,OAAOV,GAAMY,O,2BAItBZ,EAAMa,GACTnD,QAAQC,IAAI,OAAQqC,GACpB,IAAMc,EAAQ/H,KAAK2H,OAAOV,GAG1B,GAFAc,EAAMF,MAAO,EAETC,EAEF,IAAK,IAAMjI,KAAOiI,EAChBC,EAAMlI,GAAOiI,EAAKjI,GAGtB,OAAOkI,EAAMF,S,kNCTjB,IAAMG,EAVG,CACLC,UAAWzF,EACX0F,cAAeC,EACfC,WAAYrD,EACZsD,gBAAiBC,EACjBC,eAAgBC,EAChBC,WAAYC,GAMVC,EAAaC,gBAAoBZ,G,0CCxBxB,GACba,IADa,SACTC,EAAMC,GACR,IAAMC,EAAkBC,EAA4BF,EAAYD,EAAKI,WACrE,IAAKF,EAAgBvB,OACnB,OAAO,EAET,IAAK,IAAID,EAAI,EAAG2B,EAAIH,EAAgBvB,OAAQD,EAAI2B,EAAG3B,IAAK,CAEtD,IAAKqB,EADaG,EAAgBxB,IAEhC,OAAO,EAGX,OAAO,EAEP,SAASqB,EAAIK,GACX,QAAIA,GACKE,EAAsBF,GAAWlC,KAAK8B,EAAKI,aAKxDG,IArBa,SAqBTP,EAAMC,GACR,IAAMC,EAAkBC,EAA4BF,EAAYD,EAAKI,WACrE,GAAKF,EAAgBvB,OAGrB,IAAK,IAAID,EAAI,EAAG2B,EAAIH,EAAgBvB,OAAQD,EAAI2B,EAAG3B,IAAK,CACtD,IAAM0B,EAAYF,EAAgBxB,GAC7BxH,KAAK6I,IAAIC,EAAMI,KAClBJ,EAAKI,WAAaJ,EAAKI,UAAL,WAAqBA,GAAcA,KAI3DnI,OAjCa,SAiCN+H,EAAMC,GACX,IAAMC,EAAkBC,EAA4BF,EAAYD,EAAKI,WACrE,GAAKF,EAAgBvB,OAGrB,IAAK,IAAID,EAAI,EAAG2B,EAAIH,EAAgBvB,OAAQD,EAAI2B,EAAG3B,IAAK,CACtD,IAAM0B,EAAYF,EAAgBxB,GAC9BxH,KAAK6I,IAAIC,EAAMI,KACjBJ,EAAKI,UAAYJ,EAAKI,UAAUI,QAAQF,EAAsBF,GAAY,MAAMK,WAOxF,SAASN,EAA4BF,EAAYS,GAC/C,GAAIT,aAAsBnC,OAAQ,CAChC,IAAM6C,EAAkBV,EAExBA,EAAa,GACb,IAAMW,EAA4C,MAApBF,EAA2B,GAAK,UAAGA,GAAmBG,MAAM,OAC1F,IAAKD,EAAsBjC,OACzB,MAAO,GAET,IAAK,IAAID,EAAI,EAAG2B,EAAIO,EAAsBjC,OAAQD,EAAI2B,EAAG3B,IAAK,CAC5D,IAAMoC,EAAkBF,EAAsBlC,GAC1CoC,GAAmBH,EAAgBzC,KAAK4C,IAC1Cb,EAAW7F,KAAK0G,GAGpB,OAAOb,EAET,OAAqB,MAAdA,EAAqB,GAAK,UAAGA,GAAaY,MAAM,OAGzD,SAASP,EAAsBF,GAC7B,OAAO,IAAItC,OAAJ,iBAAqBsC,EAArB,Y,oBC7DHW,G,cAAgBC,aAAS,SAAAC,GAAU,IAChC3B,EAAcQ,IAAMoB,WAAWrB,GAA/BP,WASP,OARiBA,EAAVnF,OAEIwE,OAAS,GAClBwC,IAAMvH,MAAM0F,EAAWnF,OAAOiH,KAAlB,OAA+B,CACzCC,QAAS,kBAAM/B,EAAWnH,WAK5B,kBAAC,IAAD,CACEmJ,SAAS,YACTC,WAAYC,IACZC,UAAW,IACXC,iBAAe,EACfC,aAAW,EACXC,cAAY,EACZC,KAAK,EACLC,yBAAuB,EACvBC,WAAS,EACTC,cAAY,QAKHC,cAAWlB,G,uFCVpBmB,GAAcC,aAbL,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,OAAQ,EACRC,QAAS,GAEXC,YAAa,CACXlB,SAAU,WACVmB,MAAOL,EAAMM,QAAQ,GACrBC,IAAKP,EAAMM,QAAQ,GACnBE,MAAOR,EAAMS,QAAQC,KAAK,SAIVX,EAAmB,SAAAlB,GACUA,EAAxC8B,SADwC,IAC9BC,EAA8B/B,EAA9B+B,QAAS3B,EAAqBJ,EAArBI,QAAY4B,EADQ,YACChC,EADD,kCAE9C,OACE,kBAAC,KAAD,eAAgBiC,mBAAiB,EAAC9C,UAAW4C,EAAQX,MAAUY,GAC5D5B,EACC,kBAAC8B,GAAA,EAAD,CAAYC,aAAW,QAAQhD,UAAW4C,EAAQR,YAAaa,QAAShC,GACtE,kBAAC,KAAD,OAEA,SAKJiC,GAAQ,SAAArC,GAAU,IACflC,EAA2BkC,EAA3BlC,KAAMsC,EAAqBJ,EAArBI,QAAS0B,EAAY9B,EAAZ8B,SAEhBQ,EAAc,WAClBlC,KAGF,OACE,kBAACmC,GAAA,EAAD,CACEzE,KAAMA,EACNsC,QAASkC,EACTE,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACb9K,QAAS,MAGX,kBAAC,GAAD,CAAauE,GAAG,0BAA0BgE,QAASkC,IACnD,kBAACM,GAAA,EAAD,CAAeC,UAAQ,GAAEf,KAW/BO,GAAMS,aAAe,CACnBhB,SAAU,IAGGd,mBAAWqB,I,8ECpEXU,gBAAe,CAC5BC,wBAAyB,CACvB5G,GAAI,4BACJ6G,eAAgB,0BAElBC,4BAA6B,CAC3B9G,GAAI,gCACJ6G,eAAgB,6CAElBE,iBAAkB,CAChB/G,GAAI,qBACJ6G,eAAgB,kBAElBG,2CAA4C,CAC1ChH,GAAI,gDACJ6G,eAAgB,iCAElBI,kCAAmC,CACjCjH,GAAI,uCACJ6G,eAAgB,uBAElBK,yBAA0B,CACxBlH,GAAI,6BACJ6G,eAAgB,sCAElBM,yBAA0B,CACxBnH,GAAI,6BACJ6G,eAAgB,sCAElBO,2BAA4B,CAC1BpH,GAAI,+BACJ6G,eAAgB,2CAElBQ,mBAAoB,CAClBrH,GAAI,uBACJ6G,eAAgB,0BAElBS,mBAAoB,CAClBtH,GAAI,uBACJ6G,eAAgB,0BAElBU,uBAAwB,CACtBvH,GAAI,2BACJ6G,eAAgB,uCAElBW,qBAAsB,CACpBxH,GAAI,yBACJ6G,eAAgB,uCAElBY,0BAA2B,CACzBzH,GAAI,8BACJ6G,eAAgB,+BAElBa,qBAAsB,CACpB1H,GAAI,yBACJ6G,eAAgB,sCAElBc,sBAAuB,CACrB3H,GAAI,0BACJ6G,eAAgB,gCAElBe,oBAAqB,CACnB5H,GAAI,wBACJ6G,eAAgB,8BAElBgB,uBAAwB,CACtB7H,GAAI,2BACJ6G,eAAgB,8CAElBiB,mBAAoB,CAClB9H,GAAI,uBACJ6G,eAAgB,yBAElBkB,sBAAuB,CACrB/H,GAAI,0BACJ6G,eAAgB,gBAElBmB,oBAAqB,CACnBhI,GAAI,wBACJ6G,eAAgB,wDAElBoB,+BAAgC,CAC9BjI,GAAI,oCACJ6G,eAAgB,2EAElBqB,+BAAgC,CAC9BlI,GAAI,mCACJ6G,eAAgB,qDAElBsB,wBAAyB,CACvBnI,GAAI,4BACJ6G,eAAgB,8EAElBuB,wBAAyB,CACvBpI,GAAI,4BACJ6G,eACE,wGAEJwB,2BAA4B,CAC1BrI,GAAI,+BACJ6G,eAAgB,sCAElByB,qBAAsB,CACpBtI,GAAI,yBACJ6G,eAAgB,gCAElB0B,uBAAwB,CACtBvI,GAAI,2BACJ6G,eAAgB,6BAElB2B,sBAAuB,CACrBxI,GAAI,0BACJ6G,eAAgB,iCCpGd4B,GAAYC,cAAW,SAAA3D,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,QAEV0D,MAAO,CACLC,aAAc,QAEhB1L,OAAQ,CACN2L,UAAW,aAITC,GAAoBnF,aAAS,WAAO,IAAD,EACFlB,IAAMoB,WAAWrB,GAA/CJ,EADgC,EAChCA,eAAgBE,EADgB,EAChBA,WADgB,EAEEyG,eAAlCC,EAFgC,EAEhCA,aAAcC,EAFkB,EAElBA,SAAUnM,EAFQ,EAERA,OACzBoM,EAAOC,eACPxD,EAAU8C,KAiBhB,OACE,0BAAM1F,UAAW4C,EAAQX,KAAMoE,YAAU,EAACC,SAAUL,GAhBrC,SAAAhP,GACfoI,EACGkH,cAActP,GACd6D,MAAK,WACJyE,EAAWiH,MAAM,iBACjBzF,IAAM0F,QAAQ,6IAEfzL,OAAM,SAAAxB,GACL,IAAMO,EAAS7C,OAAOiH,KAAK3E,GAAOkN,KAAI,SAAA9M,GACpC,OAAOJ,EAAMI,GAAK,MAEpBmH,IAAMvH,MAAMO,EAAOiH,KAAP,eAMd,kBAAC2F,GAAA,EAAD,CAAY3G,UAAW4C,EAAQgD,MAAOgB,QAAQ,KAAKC,cAAY,GAA/D,+FAGA,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACzE,QAAS,GACvB,kBAACwE,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,OACHP,KAAK,OACLyK,MAAM,4HACNC,WAAS,EACTC,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,WAElFlD,QAASO,EAAO2C,KAChB+K,WAAc1N,EAAO2C,KAAO3C,EAAO2C,KAAK5C,QAAU,QAGtD,kBAACgN,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,YACHP,KAAK,YACLyK,MAAM,oGACNC,WAAS,EACTC,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,gBAElFlD,QAASO,EAAO2N,UAChBD,WAAc1N,EAAO2N,UAAY3N,EAAO2N,UAAU5N,QAAU,QAmBhE,kBAACgN,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,UACHP,KAAK,UACLyK,MAAM,0GACNC,WAAS,EACTC,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,WAElFlD,QAASO,EAAO4N,QAChBF,WAAc1N,EAAO4N,QAAU5N,EAAO4N,QAAQ7N,QAAU,QAG5D,kBAACgN,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,SACHP,KAAK,SACLyK,MAAM,uCACNC,WAAS,EACTC,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,aAElFlD,QAASO,EAAO+C,OAChB2K,WAAc1N,EAAO+C,OAAS/C,EAAO+C,OAAOhD,QAAU,QAG1D,kBAACgN,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,OACHP,KAAK,OACLyK,MAAM,iCACNC,WAAS,EACTC,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,WAElFlD,QAASO,EAAO8C,KAChB4K,WAAc1N,EAAO8C,KAAO9C,EAAO8C,KAAK/C,QAAU,QAGtD,kBAACgN,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,QACHP,KAAK,QACLyK,MAAM,SACNC,WAAS,EACTC,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,YAElFlD,QAASO,EAAOuB,MAChBmM,WAAc1N,EAAOuB,MAAQvB,EAAOuB,MAAMxB,QAAU,QAGxD,kBAACgN,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,QACHP,KAAK,QACLyK,MAAM,6CACNC,WAAS,EACTC,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,YAElFlD,QAASO,EAAO6N,MAChBH,WAAc1N,EAAO6N,MAAQ7N,EAAO6N,MAAM9N,QAAU,QAGxD,kBAACgN,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,IACrB,kBAACC,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,cACHP,KAAK,cACLyK,MAAM,oIACNC,WAAS,EACTS,WAAS,EACTC,KAAM,EACNT,SAAUnB,OAGd,kBAACY,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIhH,UAAW4C,EAAQzI,QACpC,kBAAC4N,GAAA,EAAD,CAAQhK,KAAK,SAAS6I,QAAQ,YAAYpE,MAAM,WAAhD,0DASKX,eAAWkE,IC5KXiC,GAXYpH,aAAS,WAAO,IAClCrB,EAAcG,IAAMoB,WAAWrB,GAA/BF,WACAZ,EAAQY,EAAWd,OAAOC,cAA1BC,KAEP,OACE,kBAAC,GAAD,CAAOqB,UAAU,iBAAiBrB,KAAMA,EAAMsC,QAAS,kBAAM1B,EAAWiH,MAAM,mBAC5E,kBAAC,GAAD,UCFSyB,GANArH,aAAS,kBACtB,gBAAC,WAAD,KACE,gBAAC,GAAD,UC2BWsH,GA3BMtH,aAAS,YAAsC,IAAzBuH,EAAwB,EAAnCC,UAAyBC,EAAU,6BAC1DtJ,EAAaW,IAAMoB,WAAWrB,GAA9BV,UACAtE,EAAkCsE,EAAlCtE,aAAcF,EAAoBwE,EAApBxE,iBAErB,OACE,kBAAC,IAAD,iBACM8N,EADN,CAEEC,OAAQ,SAAAzH,GAAK,OAEXpG,EACE,kBAAC0N,EAActH,GACbtG,EAAmB,KACrB,kBAAC,IAAD,CACEgO,GAAI,CACFC,SAAU,mBCiBTC,GA/BK7H,aAAS,YAAsC,IAAzBuH,EAAwB,EAAnCC,UAAyBC,EAAU,6BACzDtJ,EAAaW,IAAMoB,WAAWrB,GAA9BV,UACAtE,EAAkCsE,EAAlCtE,aAAcF,EAAoBwE,EAApBxE,iBAEfmO,EAAY,yBAAK1I,UAAU,mBAEjC,OACE,kBAAC,IAAD,iBACMqI,EADN,CAEEC,OAAQ,SAAAzH,GAAK,OAEXpG,EACE,kBAAC,IAAD,CACE8N,GAAI,CACFC,SAAU,qBAGZjO,EACFmO,EAEA,kBAACP,EAActH,U,iFCTnB6E,GAAYC,cAAW,SAAA3D,GAAK,cAAK,CACrC2G,QAAM,oBACH3G,EAAM4G,YAAYC,GAAG,MAAQ,CAC5BC,MAAM,eAAD,OALS,IAKT,OACLC,WANc,MAGZ,iCAKa,QALb,GAONC,YAAU,GACRC,YAAajH,EAAMM,QAAQ,IADnB,eAEPN,EAAM4G,YAAYC,GAAG,MAAQ,CAC5BK,QAAS,SAHH,uBAKD,QALC,GAOVC,QAAS,CACPC,eAAgB,iBAElBxD,MAAO,CACLpD,MAAO,YAgDI6G,GA5CAzI,aAAS,SAAAC,GACtB,IAAM+B,EAAU8C,KADe,EAEuBhG,IAAMoB,WAAWrB,GAAhEN,EAFwB,EAExBA,gBAAiBE,EAFO,EAEPA,eAAgBE,EAFT,EAESA,WACjClD,EAAkBgD,EAAlBhD,eAMP,OACE,kBAAC,IAAMiN,SAAP,KACE,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAQtI,SAAS,QAAQlB,UAAW4C,EAAQ+F,QAC1C,kBAACc,GAAA,EAAD,CAASzJ,UAAW4C,EAAQuG,SAC1B,kBAACpG,GAAA,EAAD,CACEP,MAAM,UACNQ,aAAW,cACX0G,KAAK,QACLzG,QAbiB,WACzB9D,EAAgBwK,qBAaR3J,UAAW4C,EAAQoG,YAEnB,kBAAC,KAAD,OAEF,kBAACrC,GAAA,EAAD,CAAY3G,UAAW4C,EAAQgD,MAAOgB,QAAQ,KAAKgD,QAAM,GACrDjP,IAAEC,QAAQyB,GAAuD,6CAAlE,iDAAyCA,EAAeK,OAE3D,kBAACqL,GAAA,EAAD,CACEnB,QAAQ,YACRpE,MAAM,UACNqH,UAAW,kBAAC,KAAD,MACX5G,QAAS,kBAAM1D,EAAWZ,KAAK,mBAJjC,0D,8GChDJ+G,I,OAAYC,cAAW,SAAA3D,GAAK,MAAK,CACrC8H,OAAO,gBACJ9H,EAAM4G,YAAYC,GAAG,MAAQ,CAC5BC,MALc,IAMdiB,WAAY,IAGhBZ,QAASnH,EAAMgI,OAAOb,QACtBc,YAAa,CACXnB,MAXgB,KAalBoB,KAAM,CACJpB,MAAO,OACP3G,QAAS,kBAkFEgI,GA9EGvJ,aAAS,SAAAC,GAAU,IAC5B5I,EAAU4I,EAAV5I,OAD2B,EAEGyH,IAAMoB,WAAWrB,GAA/CV,EAF2B,EAE3BA,UAAWI,EAFgB,EAEhBA,gBACZyD,EAAU8C,KACV1D,EAAQoI,eAMRN,EACJ,6BACE,yBAAK9J,UAAW4C,EAAQuG,SACtB,kBAAC,IAAD,CAAMZ,GAAG,mBACP,yBAAKvI,UAAW4C,EAAQsH,KAAMG,IAAKC,EAAQ,KAAoCC,IAAI,WAGvF,kBAACC,GAAA,EAAD,KACE,kBAAC,IAAD,CAASxK,UAAU,oBAAoBuI,GAAI,mBACzC,kBAACkC,GAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,qDAGJ,kBAACH,GAAA,EAAD,CAAUC,QAAM,EAACzH,QAAS,kBAAMlE,EAAU8L,WACxC,kBAACF,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcE,QAAQ,sCAMxB/D,OAAuBpP,IAAXM,EAAuB,kBAAMA,IAAS8S,SAASC,WAAOrT,EAExE,OACE,kBAAC,IAAM2R,SAAP,KACE,yBAAKtJ,UAAW4C,EAAQkH,OAAQ9G,aAAW,mBACzC,kBAACiI,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,GAAA,EAAD,CACErE,UAAWA,EACXH,QAAQ,YACRyE,OAA4B,QAApBrJ,EAAMsJ,UAAsB,QAAU,OAC9C3M,KAAMQ,EAAgBjD,iBACtB+E,QAzCiB,WACzB9B,EAAgBwK,qBAyCR/G,QAAS,CACP2I,MAAO3I,EAAQqH,aAEjBuB,WAAY,CACVC,aAAa,IAGd3B,IAGL,kBAACmB,GAAA,EAAD,CAAQS,QAAM,EAACP,eAAe,OAC5B,kBAACC,GAAA,EAAD,CACExI,QAAS,CACP2I,MAAO3I,EAAQqH,aAEjBrD,QAAQ,YACRjI,MAAI,GAEHmL,SC7DEjI,gBAjCD,SAAAhB,GAAU,IACf5D,EAAM4D,EAAN5D,GAEPyC,IAAMiM,WAAU,WAGd,OAFAC,EAAmB3O,GAEZ,WACL4O,QAIJ,IAAMD,EAAqB,SAAAE,GACzBD,IACAE,EAAU5L,IAAI4K,SAASC,KAAvB,gBAAsCc,KAGlCD,EAA0B,WAC9BE,EAAUlU,OAAOkT,SAASC,KAAM,YAGlC,OACE,kBAAC,IAAD,KACE,+BAAQ/N,GACR,0BAAMP,KAAK,cAAcsP,QAAS/O,IAClC,0BAAMgP,IAAI,YAAYC,KAAK,wC,yOChB3BC,GAAa,GAEbzG,GAAYC,cAAW,SAAA3D,GAAK,MAAK,CACrCoK,KAAM,CACJlD,QAAS,OACT/G,QAAS,QAEXkK,MAAO,CACLvD,MAAO,KACPI,QAAS,OACTE,eAAgB,SAChBkD,WAAY,UAEd3P,OAAQ,CACNmM,MAAO,MACP5G,OAAQ,KAEVqK,YAAa,CACXC,SAAU,IACV1D,MAAO,YAIL2D,GAAkB7L,aAAS,WAAO,IAC/BvB,EAAkBK,IAAMoB,WAAWrB,GAAnCJ,eACAlD,EAA2DkD,EAA3DlD,YAAaC,EAA8CiD,EAA9CjD,oBAAqBI,EAAyB6C,EAAzB7C,sBACnCoG,EAAU8C,KAHqB,EAIZM,eAAlBqG,EAJ8B,EAI9BA,MAAOK,EAJuB,EAIvBA,QACR9P,EAAOJ,EAAwBJ,EAAsBD,EAOjC,IAAtBgQ,GAAW5N,QACb3B,EAAKD,QAAO,SAAA0B,GAAI,QAAMA,EAAKvB,UAAQ4J,KAAI,SAAAiG,GAAG,OAAIR,GAAWnS,KAAK2S,EAAI7P,WAGpE,IAAM8P,EAAcC,MAAMC,KAAK,IAAIC,IAAIZ,KAEvC,OACE,0BAAMnM,UAAW4C,EAAQwJ,KAAM/F,YAAU,GACvC,kBAACS,GAAA,EAAD,CAAM9G,UAAW4C,EAAQjG,OAAQoK,WAAS,EAACzE,QAAS,GAClD,kBAACwE,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIgG,GAAI,EAAG/F,GAAI,GAC5B,kBAAC,KAAD,CACEvK,KAAK,cACL4L,OAAQ,gBAAErR,EAAF,EAAEA,MAAOgW,EAAT,EAASA,SAAT,OACN,kBAAC/F,GAAA,EAAD,CACEjQ,MAAOA,EACPgG,GAAG,cACHkK,MAAM,4HACNP,QAAQ,WACRQ,WAAS,EACT6F,SAAU,SAAA5V,GACR4V,EAAS5V,EAAE6V,OAAOjW,OAClBoI,EAAe8N,UAAU9V,EAAE6V,OAAOjW,MAAO,YAI/CgW,SAAU,SAAA9R,GAAI,OAAIA,GAClBuR,QAASA,EACTU,aAAa,MAGjB,kBAACtG,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIgG,GAAI,EAAG/F,GAAI,GAC5B,kBAACoG,GAAA,EAAD,CAAazG,QAAQ,WAAW5G,UAAW4C,EAAQ2J,aACjD,kBAACe,GAAA,EAAD,CAAYrQ,GAAG,uBAAf,6DACA,kBAAC,KAAD,CACEP,KAAK,cACL4L,OAAQ,gBAAErR,EAAF,EAAEA,MAAOgW,EAAT,EAASA,SAAT,OACN,kBAACM,GAAA,EAAD,CACEC,QAAQ,sBACRvQ,GAAG,cACHhG,MAAOA,EACPgW,SAAU,SAAA5V,GACR4V,EAAS5V,EAAE6V,OAAOjW,OAClBoI,EAAe8N,UAAU9V,EAAE6V,OAAOjW,MAAO,WAE3CkQ,MAAM,4DACNsG,WAAS,GAERb,EAAYlG,KAAI,SAACiG,EAAKrO,GACrB,OACE,kBAACoP,GAAA,EAAD,CAAU/W,IAAK2H,EAAGrH,MAAO0V,GACtBA,QAMXM,SAAU,SAAA9R,GAAI,OAAIA,GAClBuR,QAASA,EACTU,aAAa,OAInB,kBAACtG,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIgG,GAAI,EAAG/F,GAAI,GAC5B,kBAACoG,GAAA,EAAD,CAAazG,QAAQ,WAAW5G,UAAW4C,EAAQ2J,aACjD,kBAACe,GAAA,EAAD,CAAYrQ,GAAG,uBAAf,wCACA,kBAAC,KAAD,CACEP,KAAK,gBACL4L,OAAQ,gBAAErR,EAAF,EAAEA,MAAOgW,EAAT,EAASA,SAAT,OACN,kBAACM,GAAA,EAAD,CACEC,QAAQ,sBACRvQ,GAAG,gBACHhG,MAAOA,EACPgW,SAAU,SAAA5V,GACR4V,EAAS5V,EAAE6V,OAAOjW,OAClBoI,EAAe8N,UAAU9V,EAAE6V,OAAOjW,MAAO,WAE3CkQ,MAAM,uCACNsG,WAAS,GAERb,EAAYlG,KAAI,SAACiG,EAAKrO,GACrB,OACE,kBAACoP,GAAA,EAAD,CAAU/W,IAAK2H,EAAGrH,MAAO0V,GACtBA,QAMXM,SAAU,SAAA9R,GAAI,OAAIA,GAClBuR,QAASA,EACTU,aAAa,OAInB,kBAACtG,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIgG,GAAI,EAAG/F,GAAI,GAC5B,kBAAC,KAAD,CACEvK,KAAK,cACL4L,OAAQ,gBAAErR,EAAF,EAAEA,MAAOgW,EAAT,EAASA,SAAT,OACN,kBAAC/F,GAAA,EAAD,CACEjQ,MAAOA,EACPgG,GAAG,cACHkK,MAAM,iCACNP,QAAQ,WACRQ,WAAS,EACT6F,SAAU,SAAA5V,GACR4V,EAAS5V,EAAE6V,OAAOjW,OAClBoI,EAAe8N,UAAU9V,EAAE6V,OAAOjW,MAAO,YAI/CgW,SAAU,SAAA9R,GAAI,OAAIA,GAClBuR,QAASA,EACTU,aAAa,OAInB,kBAACtG,GAAA,EAAD,CAAM9G,UAAW4C,EAAQyJ,OACvB,kBAACtJ,GAAA,EAAD,CAAYP,MAAM,UAAU4F,UAAU,OAAOnF,QA1H/B,SAAA0K,GAClBtB,IACAhN,EAAeuO,gBAyHT,kBAAC,KAAD,YAOK/L,eAAW4K,ICrJpBoB,GAAU,CACd,CAAC5Q,GAAI,OAAQkK,MAAO,6HACpB,CAAClK,GAAI,aAAckK,MAAO,4DAC1B,CAAClK,GAAI,SAAUkK,MAAO,wCACtB,CAAClK,GAAI,OAAQkK,MAAO,kCACpB,CAAClK,GAAI,SAAUkK,MAAO,KAGlBzB,GAAYC,cAAW,SAAA3D,GAAK,MAAK,CACrCC,KAAM,CACJ6G,MAAO,QAETJ,UAAW,CACTQ,QAAS,OACTE,eAAgB,SAChBlH,OAAQ,QAEV4L,QAAS,CACP3L,QAAS,WAIP4L,GAAiBnN,aAAS,WAAO,IAC9BvB,EAAkBK,IAAMoB,WAAWrB,GAAnCJ,eACAlD,EAA2DkD,EAA3DlD,YAAaC,EAA8CiD,EAA9CjD,oBAAqBI,EAAyB6C,EAAzB7C,sBACnCoG,EAAU8C,KAHoB,EAIZhG,IAAMsO,SAAS,GAJH,oBAI7BlC,EAJ6B,KAIvBmC,EAJuB,OAKEvO,IAAMsO,SAAS,IALjB,oBAK7BE,EAL6B,KAKhBC,EALgB,OAMZzO,IAAMsO,UAAS,GANH,oBAM7BrP,EAN6B,KAMvByP,EANuB,OAOJ1O,IAAMsO,SAAS,MAPX,oBAO7BK,EAP6B,KAOnBC,EAPmB,KAQ9B1R,EAAOJ,EAAwBJ,EAAsBD,EAE3DuD,IAAMiM,WAAU,WACdtM,EAAelC,mBACd,CAACkC,IAEJ,IAcM8D,EAAc,WAClBiL,GAAQ,IAeJG,EACJ,kBAACnL,GAAA,EAAD,CAAQzE,KAAMA,EAAMsC,QAASkC,GAC3B,kBAACrB,GAAA,EAAD,CAAa7E,GAAG,sBAAhB,qPACA,kBAACuR,GAAA,EAAD,KACE,kBAACzG,GAAA,EAAD,CAAQ9E,QAASE,EAAaX,MAAM,WAApC,sBAGA,kBAACuF,GAAA,EAAD,CAAQ9E,QAnBG,WACf5D,EACGoP,cAAcJ,GACdvT,MAAK,WACJiG,IAAM0F,QAAQ,yGAEfzL,OAAM,SAAAxB,GACLuH,IAAMvH,MAAM,4CAEhB4U,GAAQ,IAUuB5L,MAAM,UAAUkM,WAAS,GAApD,kBAON,OAAOvS,EAAYoC,OAAS,EAC1B,kBAACoQ,GAAA,EAAD,CAAO3O,UAAW4C,EAAQX,MACxB,kBAAC,GAAD,MACA,kBAAC2M,GAAA,EAAD,CAAgB5O,UAAW4C,EAAQmE,WACjC,kBAAC8H,GAAA,EAAD,CAAOC,cAAY,EAAC9L,aAAW,gBAC7B,kBAAC+L,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGnB,GAAQnH,KAAI,SAAAuI,GAAM,OACjB,kBAACC,GAAA,EAAD,CAAWvY,IAAKsY,EAAOhS,GAAIkS,MAAO,CAAC3C,SAAUyC,EAAOzC,WACjDyC,EAAO9H,YAKhB,kBAACiI,GAAA,EAAD,KACGxS,EAAKyS,MAAMvD,EAAOoC,EAAapC,EAAOoC,EAAcA,GAAaxH,KAAI,SAAAiG,GACpE,OACE,kBAACqC,GAAA,EAAD,CAAUM,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAG7Y,IAAKgW,EAAI1P,IACrD,kBAACiS,GAAA,EAAD,KAAYvC,EAAIjQ,MAChB,kBAACwS,GAAA,EAAD,KAAYvC,EAAI5O,MAChB,kBAACmR,GAAA,EAAD,KAAYvC,EAAI7P,QAChB,kBAACoS,GAAA,EAAD,KAAYvC,EAAI9P,MAChB,kBAACqS,GAAA,EAAD,CAAWlP,UAAW4C,EAAQkL,QAAS2B,MAAM,SAC3C,kBAACC,GAAA,EAAD,CAAS9J,MAAM,kFACb,kBAAC,IAAD,CAAM2C,GAAE,mBAAcoE,EAAI1P,KACxB,kBAAC8F,GAAA,EAAD,CAAYC,aAAW,QACrB,kBAAC,KAAD,SAIN,kBAAC0M,GAAA,EAAD,CAAS9J,MAAM,8CACb,kBAAC7C,GAAA,EAAD,CAAYE,QAAS,kBAlEjBhG,EAkEuC0P,EAAI1P,GAjEjEqR,EAAYrR,QACZmR,GAAQ,GAFc,IAAAnR,IAmEF,kBAAC,KAAD,gBAUlB,kBAAC0S,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,IAC7BxH,UAAU,MACVlK,MAAO/B,EAAYoC,OACnB2P,YAAaA,EACbpC,KAAMA,EACN+D,aA5FmB,SAAClC,EAAOmC,GAC/B7B,EAAQ6B,IA4FJC,oBAzF0B,SAAApC,GAC9BQ,GAAgBR,EAAMT,OAAOjW,OAC7BgX,EAAQ,MAyFLM,GAGH,yBAAKvO,UAAW4C,EAAQ8F,WACtB,kBAAC,KAAD,UAKS7G,eAAWkM,IChKpBiC,GAAgBpP,aAAS,WAC7B,OACE,kBAAC,IAAM0I,SAAP,KACE,kBAAC,GAAD,CAAOrM,GAAG,iBACV,yBAAK+C,UAAU,kBACb,yBAAKA,UAAU,WACb,kBAAC,GAAD,YAOK6B,eAAWmO,I,8BCYXnO,oBA1Bf,SAAkBhB,GAAQ,IACjB8B,EAAoC9B,EAApC8B,SAAU1L,EAA0B4J,EAA1B5J,MAAOgZ,EAAmBpP,EAAnBoP,MAAUpN,EADX,YACoBhC,EADpB,8BAGvB,OACE,uCACE0O,KAAK,WACLW,OAAQjZ,IAAUgZ,EAClBhT,GAAE,0BAAqBgT,GACvBE,kBAAA,qBAA+BF,IAC3BpN,GAEH5L,IAAUgZ,GACT,kBAACG,GAAA,EAAD,CAAKC,EAAG,GACL1N,OCRL2N,GAAyB1P,aAAS,SAAAC,GAAU,IACzC0P,EAAkB1P,EAAlB0P,QAAS/W,EAASqH,EAATrH,MACTkD,EAAuE6T,EAAvE7T,KAAMgL,EAAiE6I,EAAjE7I,UAAW8I,EAAsDD,EAAtDC,UAAW1T,EAA2CyT,EAA3CzT,OAAQD,EAAmC0T,EAAnC1T,KAAMvB,EAA6BiV,EAA7BjV,MAAOsM,EAAsB2I,EAAtB3I,MAAO6I,EAAeF,EAAfE,YAE/D,OAAQ9V,IAAEC,QAAQ2V,GAkJd,KAjJF,kBAAC,IAAMjH,SAAP,KACE,kBAAC3C,GAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,iHAGA,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACzE,QAAS,GACvB,kBAACwE,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,IACb,kBAAC,KAAD,CACEtK,KAAK,OACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEjK,GAAG,OACHkK,MAAM,4HACNP,QAAQ,WACRQ,WAAS,EACT5N,QAASA,EAAMkD,KACf+K,WAAcjO,EAAMkD,KAAOlD,EAAMkD,KAAK5C,QAAU,OAGpD6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc1Q,KAGlB,kBAACoK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,YACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,YACHkK,MAAM,oGACNC,WAAS,EACT5N,QAASA,EAAMkO,UACfD,WAAcjO,EAAMkO,UAAYlO,EAAMkO,UAAU5N,QAAU,OAG9D6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc1F,KAGlB,kBAACZ,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,YACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,YACHkK,MAAM,0GACNC,WAAS,EACT5N,QAASA,EAAMmO,QACfF,WAAcjO,EAAMmO,QAAUnO,EAAMmO,QAAQ7N,QAAU,OAG1D6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAcoD,KAIlB,kBAAC1J,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,SACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,SACHkK,MAAM,uCACNC,WAAS,EACT5N,QAASA,EAAMsD,OACf2K,WAAcjO,EAAMsD,OAAStD,EAAMsD,OAAOhD,QAAU,OAGxD6W,MAAO,CAACrJ,UAAU,GAClB8F,aAActQ,KAGlB,kBAACgK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,OACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,OACHkK,MAAM,iCACNC,WAAS,EACT5N,QAASA,EAAMqD,KACf4K,WAAcjO,EAAMqD,KAAOrD,EAAMqD,KAAK/C,QAAU,OAGpD6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAcvQ,KAIlB,kBAACiK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,QACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,QACHkK,MAAM,SACNC,WAAS,EACT5N,QAASA,EAAM8B,MACfmM,WAAcjO,EAAM8B,MAAQ9B,EAAM8B,MAAMxB,QAAU,OAGtD6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc9R,KAGlB,kBAACwL,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,QACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,QACHkK,MAAM,6CACNC,WAAS,EACT5N,QAASA,EAAMoO,MACfH,WAAcjO,EAAMoO,MAAQpO,EAAMoO,MAAM9N,QAAU,OAGtD6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAcxF,KAGlB,kBAACd,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,IACb,kBAAC,KAAD,CACEtK,KAAK,cACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,cACHkK,MAAM,oIACNC,WAAS,EACTS,WAAS,EACTC,KAAM,IAGV6I,MAAO,CAACrJ,UAAU,GAClB8F,aAAcqD,UAQX5O,eAAWyO,I,oBCvJpBM,GAA0BhQ,aAAS,SAAAC,GAAU,IAC1C0P,EAAkB1P,EAAlB0P,QAAS/W,EAASqH,EAATrH,MAEdqX,EAQEN,EARFM,gBACAC,EAOEP,EAPFO,gBACAnJ,EAME4I,EANF5I,QACAoJ,EAKER,EALFQ,OACAC,EAIET,EAJFS,gBACAC,EAGEV,EAHFU,mBACAC,EAEEX,EAFFW,QACAC,EACEZ,EADFY,UAGF,OAAQxW,IAAEC,QAAQ2V,GA6Id,KA5IF,kBAAC,IAAMjH,SAAP,KACE,kBAAC3C,GAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GAArC,2GAGA,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACzE,QAAS,GACvB,kBAACwE,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,IACb,kBAAC,KAAD,CACEtK,KAAK,kBACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,kBACHkK,MAAM,iHACNC,WAAS,EACT5N,QAASA,EAAMqX,gBACfpJ,WAAcjO,EAAMqX,gBAAkBrX,EAAMqX,gBAAgB/W,QAAU,OAG1E6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAcyD,KAGlB,kBAAC/J,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,kBACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,kBACHkK,MAAM,4DACNC,WAAS,EACT5N,QAASA,EAAMsX,gBACfrJ,WAAcjO,EAAMsX,gBAAkBtX,EAAMsX,gBAAgBhX,QAAU,OAG1E6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc0D,KAGlB,kBAAChK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,UACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,UACHkK,MAAM,wCACNC,WAAS,EACT5N,QAASA,EAAMmO,QACfF,WAAcjO,EAAMmO,QAAUnO,EAAMmO,QAAQ7N,QAAU,OAG1D6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAczF,KAIlB,kBAACb,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,SACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,SACHkK,MAAM,2EACNC,WAAS,EACT5N,QAASA,EAAMuX,OACftJ,WAAcjO,EAAMuX,OAASvX,EAAMuX,OAAOjX,QAAU,OAGxD6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc2D,KAGlB,kBAACjK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,kBACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,kBACHkK,MAAM,kIACNC,WAAS,EACT5N,QAASA,EAAMwX,gBACfvJ,WAAcjO,EAAMwX,gBAAkBxX,EAAMwX,gBAAgBlX,QAAU,OAG1E6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc4D,KAIlB,kBAAClK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,qBACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,qBACHkK,MAAM,0GACNC,WAAS,EACT5N,QAASA,EAAMyX,mBACfxJ,WAAcjO,EAAMyX,mBAAqBzX,EAAMyX,mBAAmBnX,QAAU,OAGhF6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc6D,KAGlB,kBAACnK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACEvK,KAAK,UACLgU,GACE,kBAACxJ,GAAA,EAAD,CACEN,QAAQ,WACR3J,GAAG,UACHkK,MAAM,0GACNC,WAAS,EACT5N,QAASA,EAAM0X,QACfzJ,WAAcjO,EAAM0X,QAAU1X,EAAM0X,QAAQpX,QAAU,OAG1D6W,MAAO,CAACrJ,UAAU,GAClB8F,aAAc8D,KAGlB,kBAACpK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,IACb,kBAAC,KAAD,CACEtK,KAAK,YACL4L,OAAQ,SAAAzH,GAAK,OACX,kBAACuQ,GAAA,EAAD,CACE1E,QAAS,kBAAC2E,GAAA,EAAD,CAAQpE,SAAU,SAAA5V,GAAC,OAAIwJ,EAAMoM,SAAS5V,EAAE6V,OAAOoE,UAAUA,QAASzQ,EAAM5J,QACjFkQ,MAAM,uHAGViG,aAAc+D,UAQXtP,eAAW+O,IC3JpBlL,GAAYC,cAAW,SAAA3D,GAAK,MAAK,CACrC0G,UAAW,CACTQ,QAAS,OACTE,eAAgB,SAChBlH,OAAQ,QAEV/H,OAAQ,CACN2L,UAAW,aAITyL,GAAc3Q,aAAS,WAAO,IAAD,EACIlB,IAAMoB,WAAWrB,GAA/CJ,EAD0B,EAC1BA,eAAgBE,EADU,EACVA,WAChBlD,EAAkBgD,EAAlBhD,eACDmV,EAAUxL,eACVpD,EAAU8C,KAiBhB,OACE,kBAAC,KAAiB8L,EAChB,0BAAMnL,YAAU,EAACC,SAAUkL,EAAQvL,cAjBtB,SAAAhP,GACfoI,EACGoS,cAAcpV,EAAeY,GAAIhG,GACjC6D,MAAK,WACJyE,EAAWiH,MAAM,iBACjBzF,IAAM0F,QAAQ,yJAEfzL,OAAM,SAAAxB,GACL,IAAMO,EAAS7C,OAAOiH,KAAK3E,GAAOkN,KAAI,SAAA9M,GACpC,OAAOJ,EAAMI,GAAK,MAEpBmH,IAAMvH,MAAMO,EAAOiH,KAAP,eAOVrG,IAAEC,QAAQyB,GAeV,yBAAK2D,UAAW4C,EAAQ8F,WACtB,kBAAC,KAAD,OAfF,kBAAC5B,GAAA,EAAD,CAAMC,WAAS,EAACzE,QAAS,GACvB,kBAACwE,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIgG,GAAI,GACrB,kBAAC,GAAD,CAAwBxT,MAAOgY,EAAQzX,OAAQwW,QAASlU,KAE1D,kBAACyK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIgG,GAAI,GACrB,kBAAC,GAAD,CAAyBxT,MAAOgY,EAAQzX,OAAQwW,QAASlU,KAE3D,kBAACyK,GAAA,EAAD,CAAMzI,MAAI,EAAC2I,GAAI,GAAIhH,UAAW4C,EAAQzI,QACpC,kBAAC4N,GAAA,EAAD,CAAQhK,KAAK,SAAS6I,QAAQ,YAAYpE,MAAM,WAAhD,iEAeCX,eAAW0P,I,qBClEpBG,GAA0B9Q,aAAS,WAAO,IACvCvB,EAAkBK,IAAMoB,WAAWrB,GAAnCJ,eACA/C,EAA4B+C,EAA5B/C,SAAUD,EAAkBgD,EAAlBhD,eAF4B,EAGfqD,IAAMsO,UAAS,GAHA,oBAGtC2D,EAHsC,KAG7BC,EAH6B,KAK7ClS,IAAMiM,WAAU,WACdiG,GAAW,GACXvS,EAAe9B,yBAAyBlB,EAAeY,IAAInC,MAAK,kBAAM8W,GAAW,QAChF,CAACvS,EAAgBhD,EAAeY,KASnC,OACE,kBAAC,KAAD,CACE2I,MAAM,uKACNiM,aAAc,CAAC7G,KAAM,CAAC8G,QAAS,CAACC,WAAY,mLAC5ClE,QAXY,CACd,CAACjI,MAAO,2BAAQoM,MAAO,QACvB,CAACpM,MAAO,qBAAOoM,MAAO,gBACtB,CAACpM,MAAO,gEAAeoM,MAAO,kBAC9B,CAACpM,MAAO,uCAAUoM,MAAO,aAQvB7W,KAAMmB,GAAY,GAClB9B,UAAWmX,EACXM,SAAU,CACRC,SAAU,SAAA9U,GAAO,OACf,IAAI3D,SAAQ,SAACuC,EAAStC,GACpByY,YAAW,WACT9S,EACG+S,cAAc/V,EAAeY,GAAIG,GACjCtC,MAAK,WACJiG,IAAM0F,QAAQ,sKAEfzL,OAAM,SAAAxB,GACLuH,IAAMvH,MAAM,4CAEhBwC,MACC,SAEPqW,YAAa,SAACjV,EAASkV,GAAV,OACX,IAAI7Y,SAAQ,SAACuC,EAAStC,GACpByY,YAAW,WACT9S,EACGkT,iBAAiBlW,EAAeY,GAAIG,GACpCtC,MAAK,WACJiG,IAAM0F,QAAQ,sKAEfzL,OAAM,SAAAxB,GACLuH,IAAMvH,MAAM,4CAEhBwC,MACC,SAEPwW,YAAa,SAAAF,GAAO,OAClB,IAAI7Y,SAAQ,SAACuC,EAAStC,GACpByY,YAAW,WACT9S,EACGoT,iBAAiBpW,EAAeY,GAAIqV,GACpCxX,MAAK,WACJiG,IAAM0F,QAAQ,0JAEfzL,OAAM,SAAAxB,GACLuH,IAAMvH,MAAM,4CAEhBwC,MACC,eAOA6F,eAAW6P,ICjE1B,SAASgB,GAAUzC,GACjB,MAAO,CACLhT,GAAG,cAAD,OAAgBgT,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMvK,GAAYC,cAAW,SAAA3D,GAAK,MAAK,CACrCC,KAAM,CACJ0Q,SAAU,EACVC,gBAAiB5Q,EAAMS,QAAQoQ,WAAWtH,WAIxCuH,GAAiBlS,aAAS,WAAO,IAC9BvB,EAAkBK,IAAMoB,WAAWrB,GAAnCJ,eACA/B,EAAayV,cAAbzV,UACDsF,EAAU8C,KAHoB,EAIVhG,IAAMsO,SAAS,GAJL,oBAI7B/W,EAJ6B,KAItB+b,EAJsB,KAMpCtT,IAAMiM,WAAU,WAGd,OAFAtM,EAAehC,kBAAkBC,GAE1B,WACL+B,EAAegN,WAEhB,CAAChN,EAAgB/B,IAMpB,OACE,kBAAC,IAAMgM,SAAP,KACE,kBAAC,GAAD,CAAOrM,GAAG,oBACV,yBAAK+C,UAAU,gBACb,yBAAKA,UAAW4C,EAAQX,MACtB,kBAACuH,GAAA,EAAD,CAAQtI,SAAS,SAASsB,MAAM,WAC9B,kBAACyQ,GAAA,EAAD,CAAMhc,MAAOA,EAAOgW,SAVT,SAACU,EAAOuF,GAC3BF,EAASE,IAS6CC,eAAe,UACvDC,UAAU,WACd,kBAACC,GAAA,EAAD,eAAKlM,MAAM,gEAAiBuL,GAAU,KACtC,kBAACW,GAAA,EAAD,eAAKlM,MAAM,uHAA2BuL,GAAU,OAGpD,kBAAC,GAAD,CAAUzb,MAAOA,EAAOgZ,MAAO,GAC7B,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAUhZ,MAAOA,EAAOgZ,MAAO,GAC7B,kBAAC,GAAD,aAQGpO,eAAWiR,IClEXQ,I,OAAAA,gBAAK,kBAClB,yBAAKtT,UAAU,aACb,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,kBAAd,mBAEA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,oBAAd,kBAEA,uBAAGA,UAAU,mBAAb,sDAEA,uBAAGA,UAAU,mBAAb,uCAEA,kBAAC,IAAD,CAAMuI,GAAG,IAAIvI,UAAU,qBAAvB,2BCNF0F,GAAYC,cAAW,SAAA3D,GAAK,YAAK,CACrCC,KAAM,CACJiH,QAAS,OACTqK,OAAQ,QAGVpK,QAASnH,EAAMgI,OAAOb,QACtB6C,SAAO,GACL2G,SAAU,EACVxQ,QAAS,QAFJ,eAGJH,EAAM4G,YAAY4K,KAAK,MAAQ,CAC9BrR,QAAS,SAJN,iCAMY,WANZ,OA8BMsR,GApBO7S,aAAS,WAC7B,IAAMgC,EAAU8C,KAEhB,OACE,0BAAM1F,UAAW4C,EAAQX,MACvB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,0BAAMjC,UAAW4C,EAAQoJ,SACvB,yBAAKhM,UAAW4C,EAAQuG,UACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUuK,OAAK,EAAC5G,KAAK,IAAIvE,GAAG,oBAC5B,kBAAC,IAAD,CAAOoL,KAAK,kBAAkBvL,UAAW4H,GAAe0D,OAAK,IAC7D,kBAAC,IAAD,CAAOC,KAAK,sBAAsBvL,UAAW0K,GAAgBY,OAAK,IAClE,kBAAC,IAAD,CAAOtL,UAAWwL,W,wECnBtBlO,GAAYC,cAAW,SAAA3D,GAAK,MAAK,CACrCC,KAAM,CACJsR,OAAQ,QACRrK,QAAS,OACTE,eAAgB,SAChBkD,WAAY,UAEdf,MAAO,CACLrJ,OAAQF,EAAMM,QAAQ,EAAG,GACzB4G,QAAS,OACT2K,cAAe,SACfvH,WAAY,SACZwH,SAAU,SAEZ1H,KAAM,CACJtD,MAAO,OACPiL,UAAW/R,EAAMM,QAAQ,IAE3B0R,OAAQ,CACN9R,OAAQF,EAAMM,QAAQ,EAAG,EAAG,IAE9BJ,OAAQ,CACN6R,UAAW,QAEbha,OAAQ,CACNyI,MAAO,OAETrI,OAAQ,CACN+O,QAAS,OACTE,eAAgB,gBAId6K,GAAYrT,aAAS,SAAAC,GAAU,IAC5BsF,EAAQtF,EAARsF,KACApH,EAAaW,IAAMoB,WAAWrB,GAA9BV,UACAvE,EAAauE,EAAbvE,UAH2B,EAIOwL,eAAlCC,EAJ2B,EAI3BA,aAAcC,EAJa,EAIbA,SAAUnM,EAJG,EAIHA,OAJG,EAKM2F,IAAMsO,UAAS,GALrB,oBAK3BkG,EAL2B,KAKbC,EALa,KAM5BvR,EAAU8C,KAEhBhG,IAAMiM,WACJ,kBAAM,WACJ5M,EAAUqV,gBAEZ,CAACrV,IAGH,IAIMsV,EAAmB,WACvBF,GAAiBD,IAGnB,OACE,kBAACpN,GAAA,EAAD,CAAMC,WAAS,EAACqB,UAAU,OAAOpI,UAAW4C,EAAQX,MAClD,kBAAC6E,GAAA,EAAD,CAAMzI,MAAI,EAAC+J,UAAWuG,KAAO2F,UAAW,EAAGC,QAAM,GAC/C,yBAAKvU,UAAW4C,EAAQ2I,OACtB,kBAAC5E,GAAA,EAAD,CAAYyB,UAAU,KAAKxB,QAAQ,MAAnC,sEAGA,0BAAM5G,UAAW4C,EAAQwJ,KAAM/F,YAAU,EAACC,SAAUL,GAf3C,SAAAhP,GACf8H,EAAUyV,MAAMvd,OAeR,kBAACoW,GAAA,EAAD,CAAarN,UAAW4C,EAAQV,OAAQ0E,QAAQ,WAAWQ,WAAS,GAClE,kBAACkG,GAAA,EAAD,CAAYmH,QAAQ,SAApB,SACA,kBAACC,GAAA,EAAD,CACErN,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,WAChFiY,QAAS,CACP1d,MAAO,2CACP6C,QAASqM,EAAKoB,cAAcC,GAAmB/C,yBAGnD6C,UAAQ,EACRrK,GAAG,QACHkK,MAAM,QACNzK,KAAK,QACLkY,aAAa,QACblG,WAAS,EACTlV,QAASO,EAAOuB,QAElB,kBAACuZ,GAAA,EAAD,CAAgB5X,GAAG,uBAAuB+C,UAAW4C,EAAQ7I,QACxDA,EAAOuB,MAAQvB,EAAOuB,MAAMxB,QAAU,OAG7C,kBAACuT,GAAA,EAAD,CAAarN,UAAW4C,EAAQV,OAAQ0E,QAAQ,WAAWQ,WAAS,GAClE,kBAACkG,GAAA,EAAD,CAAYmH,QAAQ,YAApB,YACA,kBAACC,GAAA,EAAD,CACEI,aACE,kBAACC,GAAA,EAAD,CAAgB7T,SAAS,OACvB,kBAAC6B,GAAA,EAAD,CACEC,aAAW,6BACXC,QAASoR,EACTW,YAAaX,GAEZH,EAAe,kBAAC,KAAD,MAAiB,kBAAC,KAAD,QAIvC7M,SAAUnB,EAAS,CACjBoB,SAAUnB,EAAKoB,cAAcC,GAAmB3D,wBAAyB,CAACnH,KAAM,aAChFuY,UAAW,CACThe,MAAO,EACP6C,QAASqM,EAAKoB,cAAcC,GAAmBrD,yBAA0B,CAAC+Q,OAAQ,OAGtF5N,UAAQ,EACR5K,KAAK,WACLyK,MAAM,WACNpJ,KAAMmW,EAAe,OAAS,WAC9BjX,GAAG,WACH2X,aAAa,mBACbpb,QAASO,EAAOwB,WAElB,kBAACsZ,GAAA,EAAD,CAAgB5X,GAAG,uBAAuB+C,UAAW4C,EAAQ7I,QACxDA,EAAOwB,SAAWxB,EAAOwB,SAASzB,QAAU,OAGnD,yBAAKkG,UAAW4C,EAAQzI,QACtB,kBAAC4N,GAAA,EAAD,CAAQhK,KAAK,SAAS6I,QAAQ,YAAYpE,MAAM,UAAUxC,UAAW4C,EAAQoR,QAC1ExZ,EAAY,mDAAa,0CAU3BqH,eAAWoS,IC9IXkB,GANDvU,aAAS,kBACrB,yBAAKZ,UAAU,SACb,kBAAC,GAAD,U,iDCCCoV,KAAKC,cACR/K,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAGL8K,KAAKE,qBACRhL,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAGV,IAAMiL,GAAW,CACfC,MACAC,OAGIC,GAAY9U,aAAS,gBAAE+B,EAAF,EAAEA,SAAUgT,EAAZ,EAAYA,OAAZ,OACzB,kBAAC,KAAD,CAAcA,OAAQA,EAAQJ,SAAUA,GAASI,IAC9ChT,MAIL+S,GAAUE,UAAY,CACpBjT,SAAUkT,KAAUC,QAAQC,WAC5BJ,OAAQE,KAAUG,OAAOD,YAGZL,U,UCzBA1T,GARDiU,aAAe,CAC3BxT,QAAS,CACPqI,QAAS,CACPoL,KAAM,cCgDGC,GArCCvV,aAAS,WAAO,IAAD,EACMlB,aAAiBD,GAA7CT,EADsB,EACtBA,cAAeD,EADO,EACPA,UAetB,OACE,gBAAC,GAAD,CAAW4W,OAAQ3W,EAAc/C,UAC/B,gBAAC,IAAD,KACE,gBAACma,EAAA,EAAD,CAAepU,MAAOA,IACpB,gBAAC,IAAD,KACE,uBAAKhC,UAAU,QCnCZ,SAAwBjB,GACjCA,EAAUtE,cACZsR,EAAU5L,IAAI4K,SAASC,KAAM,gBAC7Be,EAAUlU,OAAOkT,SAASC,KAAM,mBAEhCe,EAAU5L,IAAI4K,SAASC,KAAM,iBAC7Be,EAAUlU,OAAOkT,SAASC,KAAM,iBANc,IASzCqL,EAAape,OAAOqe,UAApBD,UAOP,OANIA,EAAUE,MAAM,YAAcF,EAAUE,MAAM,SAChDxK,EAAU5L,IAAI4K,SAASC,KAAM,UAE7Be,EAAUlU,OAAOkT,SAASC,KAAM,UAG3B,KDoBMwL,CAAezX,GAChB,gBAAC,EAAD,MACA,gBAAC,GAAD,MACA,gBAAC,IAAD,KACE,gBAAC,GAAD,CAAa4U,KAAK,SAASvL,UAAW+M,GAAOzB,OAAK,IAClD,gBAAC,GAAD,CAActL,UAAWqL,GAAeC,OAAK,aE9BzC+C,QACW,cAA7Bxe,OAAOye,SAASC,UAEe,UAA7B1e,OAAOye,SAASC,UAEhB1e,OAAOye,SAASC,SAASJ,MACvB,2DCVN,IAAMK,GAAUC,cAEhBC,IAASxO,OACP,kBAAC7I,EAAWsX,SAAZ,CAAqB9f,MAAO6H,GAC1B,kBAAC,GAAD,CAAS8X,QAASA,MAEpB7L,SAASiM,eAAe,SDmHpB,kBAAmBV,WACrBA,UAAUW,cAAcC,MAAMpc,MAAK,SAACqc,GAClCA,EAAaC,kB","file":"static/js/main.aab735c2.chunk.js","sourcesContent":["function getObject(key) {\n  return JSON.parse(this.getItem(key) || '{}');\n}\n\nfunction setObject(key, value) {\n  if (value && value instanceof Object) {\n    try {\n      this.setItem(key, JSON.stringify(value));\n    } catch (e) {\n      /* do nothing */\n    }\n  }\n}\n\nif (typeof Storage !== 'undefined') {\n  Storage.prototype.getObject = getObject;\n  Storage.prototype.setObject = setObject;\n}\n\nfunction Store(storage) {\n  this.storage = storage;\n  this.storage.getObject = getObject;\n  this.storage.setObject = setObject;\n}\n\nStore.prototype = {\n  get(key) {\n    return this.storage.getItem(key) || undefined;\n  },\n  set(key, value) {\n    if (typeof value !== 'undefined') {\n      this.storage.setItem(key, value);\n    }\n  },\n  getObject(key) {\n    return typeof this.storage.getObject === 'function' // Prevent runtime error in IE\n      ? this.storage.getObject(key)\n      : JSON.parse(this.storage.getItem(key) || '{}');\n  },\n  setObject(key, value) {\n    if (typeof this.storage.setObject === 'function') {\n      // Prevent runtime error in IE\n      this.storage.setObject(key, value);\n    } else {\n      this.storage.setItem(key, JSON.stringify(value));\n    }\n  },\n  remove(key) {\n    this.storage.removeItem(key);\n  },\n  clear() {\n    this.storage.clear();\n  },\n};\n\nconst LocalStore = new Store(window.localStorage);\n\nmodule.exports = {\n  LocalStore,\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo.d7c79911.png\";","import axios from 'axios';\nimport {LocalStore} from '../utils/storage';\nimport UserStore from '../store/UserStore';\n\nconst Api = axios.create({\n  withCredentials: false,\n  baseURL: 'http://194.67.90.67:8000/api/v1',\n  timeout: 60000,\n  headers: {\n    get: {\n      Authorization: `Bearer ${LocalStore.getObject('bizkit_data').auth_token}`,\n    },\n    post: {\n      Authorization: `Bearer ${LocalStore.getObject('bizkit_data').auth_token}`,\n    },\n    delete: {\n      Authorization: `Bearer ${LocalStore.getObject('bizkit_data').auth_token}`,\n    },\n    put: {\n      Authorization: `Bearer ${LocalStore.getObject('bizkit_data').auth_token}`,\n    },\n  },\n});\n\nApi.interceptors.request.use(\n  config => {\n    const token = UserStore.authToken;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  error => Promise.reject(error),\n);\n\nApi.interceptors.response.use(\n  response => response,\n  err => {\n    if (err && err.response) {\n      switch (err.response.status) {\n        case 400:\n          err.message = '400';\n          break;\n        case 401:\n          err.message = '401';\n          break;\n        default:\n          err.message = `(${err.response.status})!`;\n      }\n    } else {\n      err.message = 'Unknown!';\n    }\n\n    return Promise.reject(err);\n  },\n);\n\nexport default Api;\n","import {observable, action} from 'mobx';\n\nclass ErrorStore {\n  @observable errors = observable.array();\n\n  @action addError(error) {\n    this.errors.push(error);\n  }\n\n  @action clear() {\n    this.errors.clear();\n  }\n}\n\nexport default new ErrorStore();\n","import {autorun, action, extendObservable, runInAction} from 'mobx';\nimport _ from 'lodash';\nimport Api from '../services/axios';\nimport {LocalStore} from '../utils/storage';\nimport ErrorStore from './ErrorStore';\n\nclass UserStore {\n  constructor() {\n    extendObservable(this, {\n      user: {},\n      isProfileLoading: true,\n      isLoading: false,\n      isUserLogged: false,\n      error: '',\n      authToken: '',\n    });\n\n    autorun(() => {\n      if (!_.isEmpty(LocalStore.getObject('bizkit_data'))) {\n        this.verifyUser()\n          .then(() => {\n            this.getDetails();\n          })\n          .catch(error => {\n            runInAction(() => {\n              this.error = error.message;\n            });\n          });\n      } else {\n        this.isUserLogged = false;\n        this.isProfileLoading = false;\n      }\n    });\n  }\n\n  @action\n  verifyUser() {\n    return Api.post('token/verify/', {token: LocalStore.getObject('bizkit_data').auth_token})\n      .then(resp => {\n        const {data} = resp;\n        return data;\n      })\n      .catch(error => {\n        runInAction(() => {\n          this.error = error.message;\n        });\n      });\n  }\n\n  @action\n  getDetails() {\n    this.isLoading = true;\n    return Api.get('users/me/')\n      .then(resp => {\n        const {data} = resp;\n\n        runInAction(() => {\n          this.user = data;\n          this.isLoading = false;\n          this.isUserLogged = true;\n          this.isProfileLoading = false;\n          this.user.loaded = true;\n        });\n        return data;\n      })\n      .catch(error => {\n        runInAction(() => {\n          this.isLoading = false;\n          this.isUserLogged = false;\n          this.isProfileLoading = false;\n          this.error = error.message;\n        });\n      });\n  }\n\n  @action.bound\n  login(params) {\n    // eslint-disable-next-line prefer-const\n    let {email, password} = params;\n    this.isLoading = true;\n\n    const authenticationData = {\n      email: email,\n      password: password,\n    };\n\n    Api.post('token/', authenticationData)\n      .then(resp => {\n        //this.error = '';\n        console.log('resp', resp);\n        this.storeTokens(resp.data).then(fb => {\n          this.getDetails();\n          return resp;\n        });\n      })\n      .catch(error => {\n        runInAction(() => {\n          this.isLoading = false;\n          this.error = error;\n          ErrorStore.addError('Ошибка авторизации');\n        });\n      });\n  }\n\n  @action\n  storeTokens(data) {\n    this.authToken = data.access;\n\n    LocalStore.setObject('bizkit_data', {\n      auth_token: data.access,\n    });\n\n    return Promise.resolve();\n  }\n\n  @action\n  logout() {\n    this.isUserLogged = false;\n    return LocalStore.remove('bizkit_data');\n  }\n\n  @action\n  cleanError() {\n    this.error = '';\n  }\n}\n\nexport default new UserStore();\n","import {observable, action} from 'mobx';\n\nclass LanguageStore {\n  @observable language = localStorage.getItem('language') || 'en';\n\n  @action\n  changeLanguage(value) {\n    this.language = value;\n    localStorage.setItem('language', value);\n  }\n}\n\nexport default new LanguageStore();\n","import {observable, action} from 'mobx';\n\nclass MobileMenuStore {\n  @observable isOpenMobileMenu = false;\n\n  @action\n  triggerMobileMenu() {\n    this.isOpenMobileMenu = !this.isOpenMobileMenu;\n  }\n\n  @action\n  closeMobileMenu() {\n    this.isOpenMobileMenu = false;\n  }\n}\n\nexport default new MobileMenuStore();\n","import {action, extendObservable, runInAction} from 'mobx';\nimport Api from '../services/axios';\nimport _ from 'lodash';\n\nclass CompaniesStore {\n  constructor() {\n    extendObservable(this, {\n      companyList: [],\n      companyListByFilter: null,\n      companyDetails: {},\n      bankList: [],\n      bankDetails: {},\n      error: '',\n      enableFilterCompanies: false,\n      filterCompanies: {\n        name: {\n          filter: false,\n          list: [],\n        },\n        city: {\n          filter: false,\n          list: [],\n        },\n        region: {\n          filter: false,\n          list: [],\n        },\n        tracks: {\n          filter: false,\n          list: [],\n        },\n      },\n    });\n  }\n\n  @action\n  getCompanyList() {\n    this.isLoading = true;\n    return Api.get('companies/')\n      .then(resp => {\n        const {data} = resp;\n\n        runInAction(() => {\n          this.companyList = data.results;\n          this.isLoading = false;\n        });\n        return data;\n      })\n      .catch(error => {\n        runInAction(() => {\n          this.isLoading = false;\n          this.error = error.message;\n        });\n      });\n  }\n\n  @action\n  getCompanyDetails(id) {\n    this.isLoading = true;\n    return Api.get(`companies/${id}`)\n      .then(resp => {\n        const {data} = resp;\n\n        runInAction(() => {\n          this.companyDetails = data;\n        });\n        return data;\n      })\n      .catch(error => {\n        runInAction(() => {\n          this.error = error.message;\n        });\n      });\n  }\n\n  @action\n  createCompany(details) {\n    return Api.post('companies/', details)\n      .then(resp => {\n        const {data} = resp;\n        this.getCompanyList();\n        return data;\n      })\n      .catch(error => {\n        return Promise.reject(error.response.data);\n      });\n  }\n\n  @action\n  deleteCompany(id) {\n    return Api.delete(`companies/${id}/`)\n      .then(resp => {\n        const {data} = resp;\n        this.getCompanyList();\n        return data;\n      })\n      .catch(error => {\n        return Promise.reject(error.response.data);\n      });\n  }\n\n  @action\n  updateCompany(id, newData) {\n    return Api.put(`companies/${id}/`, newData)\n      .then(resp => {\n        const {data} = resp;\n        this.getCompanyDetails(id);\n        return data;\n      })\n      .catch(error => {\n        return Promise.reject(error.response.data);\n      });\n  }\n\n  @action\n  bankDetailListForCompany(id) {\n    return Api.get(`companies/${id}/bank_details`)\n      .then(resp => {\n        const {data} = resp;\n\n        runInAction(() => {\n          this.bankList = data.results;\n        });\n        return data;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  @action\n  addBankDetail(companyId, bankDetails) {\n    return Api.post(`companies/${companyId}/bank_details/`, bankDetails)\n      .then(resp => {\n        const {data} = resp;\n\n        this.bankDetailListForCompany(companyId);\n        return data;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  @action\n  updateBankDetail(companyId, bankDetails) {\n    return Api.put(`companies/${companyId}/bank_details/${bankDetails.id}/`, bankDetails)\n      .then(resp => {\n        const {data} = resp;\n\n        this.bankDetailListForCompany(companyId);\n        return data;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  @action\n  deleteBankDetail(companyId, bankDetails) {\n    return Api.delete(`companies/${companyId}/bank_details/${bankDetails.id}/`, bankDetails)\n      .then(resp => {\n        const {data} = resp;\n\n        this.bankDetailListForCompany(companyId);\n        return data;\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n\n  @action\n  setFilter(value, typeFilter) {\n    const re = new RegExp(_.escapeRegExp(value), 'i');\n    const currentFilter = this.filterCompanies[typeFilter];\n\n    const isMatch = result => {\n      if (typeFilter === 'name') {\n        return re.test(result.name);\n      }\n      if (typeFilter === 'city') {\n        return re.test(result.city);\n      }\n      if (typeFilter === 'region') {\n        return re.test(result.region);\n      }\n      return re.test(result.tracks);\n    };\n\n    currentFilter.filter = !!value;\n\n    if (currentFilter.filter) {\n      currentFilter.list = _.filter(this.companyList, isMatch);\n    } else {\n      currentFilter.list = [];\n    }\n\n    this.filter(typeFilter, !currentFilter.filter);\n  }\n\n  @action\n  filter(type, remove) {\n    let resultFilter = [];\n    const allFilter = [];\n    let count = 0;\n    this.enableFilterCompanies = true;\n\n    Object.keys(this.filterCompanies).forEach((item, i) => {\n      const filter = this.filterCompanies[item];\n      if (filter.list.length > 0) {\n        // eslint-disable-next-line no-plusplus\n        count++;\n        allFilter.push(filter.list);\n      }\n    });\n\n    if (this.filterCompanies[type].filter && count === 1) {\n      resultFilter = this.filterCompanies[type].list;\n    } else {\n      if (count === 0) {\n        if (type === 'name' || type === 'city') {\n          if (remove) {\n            resultFilter = this.companyList;\n          } else {\n            resultFilter = _.intersectionBy(this.companyList, allFilter[0], 'id');\n          }\n        } else {\n          resultFilter = this.companyList;\n        }\n      }\n      if (count === 1) {\n        resultFilter = _.intersectionBy(this.companyList, allFilter[0], 'id');\n      }\n      if (count === 2) {\n        resultFilter = _.intersectionBy(this.companyList, allFilter[0], allFilter[1], 'id');\n      }\n      if (count === 3) {\n        resultFilter = _.intersectionBy(this.companyList, allFilter[0], allFilter[1], allFilter[2], 'id');\n      }\n      /*\n      if (count === 4) {\n        resultFilter = _.intersectionBy(\n          this.agenda,\n          this.filterAgenda.search.list,\n          this.filterAgenda.date.list,\n          this.filterAgenda.type.list,\n          this.filterAgenda.tracks.list,\n          'id',\n        );\n      }\n      */\n    }\n\n    this.companyListByFilter = resultFilter;\n  }\n\n  @action\n  resetFilter() {\n    this.enableFilterCompanies = false;\n  }\n\n  @action\n  reset() {\n    this.companyDetails = {};\n  }\n\n  @action\n  cleanError() {\n    this.error = '';\n  }\n}\n\nexport default new CompaniesStore();\n","import {action, extendObservable} from 'mobx';\n\nclass ModalStore {\n  constructor() {\n    extendObservable(this, {\n      modals: {\n        companyCreate: {\n          open: false,\n        },\n      },\n    });\n  }\n\n  @action.bound\n  close(type) {\n    this.modals[type].open = false;\n    return this.modals[type].open;\n  }\n\n  @action.bound\n  open(type, args) {\n    console.log('type', type)\n    const modal = this.modals[type];\n    modal.open = true;\n\n    if (args) {\n      // eslint-disable-next-line guard-for-in\n      for (const key in args) {\n        modal[key] = args[key];\n      }\n    }\n    return modal.open;\n  }\n}\n\nexport default new ModalStore();\n","import * as React from 'react';\n// import {configure} from 'mobx';\nimport UserStore from './UserStore';\nimport LanguageStore from './LanguageStore';\nimport MobileMenuStore from \"./MobileMenuStore\";\nimport CompaniesStore from \"./CompaniesStore\"\nimport ModalStore from './ModalStore';\nimport ErrorStore from './ErrorStore';\n\n// configure({enforceActions: 'always'});\n\nexport function createStores() {\n  return {\n    userStore: UserStore,\n    languageStore: LanguageStore,\n    errorStore: ErrorStore,\n    mobileMenuStore: MobileMenuStore,\n    companiesStore: CompaniesStore,\n    modalStore: ModalStore,\n  };\n}\n\nconst stores = createStores();\n\nconst AppContext = React.createContext(stores);\n\nexport {stores, AppContext};\n","export default {\n  has(elem, classNames) {\n    const classNamesArray = normalizeClassNamesArgument(classNames, elem.className);\n    if (!classNamesArray.length) {\n      return false;\n    }\n    for (let i = 0, l = classNamesArray.length; i < l; i++) {\n      const className = classNamesArray[i];\n      if (!has(className)) {\n        return false;\n      }\n    }\n    return true;\n\n    function has(className) {\n      if (className) {\n        return createClassNameRegexp(className).test(elem.className);\n      }\n      return false;\n    }\n  },\n  add(elem, classNames) {\n    const classNamesArray = normalizeClassNamesArgument(classNames, elem.className);\n    if (!classNamesArray.length) {\n      return;\n    }\n    for (let i = 0, l = classNamesArray.length; i < l; i++) {\n      const className = classNamesArray[i];\n      if (!this.has(elem, className)) {\n        elem.className += elem.className ? ` ${className}` : className;\n      }\n    }\n  },\n  remove(elem, classNames) {\n    const classNamesArray = normalizeClassNamesArgument(classNames, elem.className);\n    if (!classNamesArray.length) {\n      return;\n    }\n    for (let i = 0, l = classNamesArray.length; i < l; i++) {\n      const className = classNamesArray[i];\n      if (this.has(elem, className)) {\n        elem.className = elem.className.replace(createClassNameRegexp(className), '$1').trim();\n      }\n    }\n  },\n};\n\n// Returns array of class names\nfunction normalizeClassNamesArgument(classNames, originClassNames) {\n  if (classNames instanceof RegExp) {\n    const classNameRegexp = classNames;\n    // eslint-disable-next-line no-param-reassign\n    classNames = [];\n    const originClassNamesArray = originClassNames == null ? [] : `${originClassNames}`.split(/\\s+/);\n    if (!originClassNamesArray.length) {\n      return [];\n    }\n    for (let i = 0, l = originClassNamesArray.length; i < l; i++) {\n      const classNameOrigin = originClassNamesArray[i];\n      if (classNameOrigin && classNameRegexp.test(classNameOrigin)) {\n        classNames.push(classNameOrigin);\n      }\n    }\n    return classNames;\n  }\n  return classNames == null ? [] : `${classNames}`.split(/\\s+/);\n}\n\nfunction createClassNameRegexp(className) {\n  return new RegExp(`(\\\\s|^)${className}(\\\\s|$)`);\n}\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {injectIntl} from 'react-intl';\nimport {Slide, ToastContainer, toast} from 'react-toastify';\nimport {AppContext} from '../../../store';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport './Notifications.scss';\n\nconst Notifications = observer(props => {\n  const {errorStore} = React.useContext(AppContext);\n  const {errors} = errorStore;\n\n  if (errors.length > 0)  {\n    toast.error(errorStore.errors.join(` \\n`), {\n      onClose: () => errorStore.clear(),\n    });\n  }\n\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      transition={Slide}\n      autoClose={4000}\n      hideProgressBar\n      newestOnTop\n      closeOnClick\n      rtl={false}\n      pauseOnVisibilityChange\n      draggable\n      pauseOnHover\n    />\n  );\n});\n\nexport default injectIntl(Notifications);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: 0,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {children, classes, onClose, ...other} = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst Modal = props => {\n  const {open, onClose, children} = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} />\n      <DialogContent dividers>{children}</DialogContent>\n    </Dialog>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nModal.defaultProps = {\n  children: '',\n};\n\nexport default injectIntl(Modal);\n","import {defineMessages} from 'react-intl';\n\nexport default defineMessages({\n  validationErrorRequired: {\n    id: 'validation.error.required',\n    defaultMessage: 'The field is required.',\n  },\n  validationErrorRequiredFile: {\n    id: 'validation.error.requiredFile',\n    defaultMessage: 'Please, make a snapshot or select a file.',\n  },\n  validationError0: {\n    id: 'validation.error.0',\n    defaultMessage: 'Unknown error.',\n  },\n  validationErrorRequiredAgeAndPolicyChecked: {\n    id: 'validation.error.required.ageAndPolicyChecked',\n    defaultMessage: 'You must confirm to continue.',\n  },\n  validationErrorRequiredImageField: {\n    id: 'validation.error.required.ImageField',\n    defaultMessage: 'upload file, please',\n  },\n  validationErrorMinlength: {\n    id: 'validation.error.minlength',\n    defaultMessage: 'Min length is {number} characters.',\n  },\n  validationErrorMaxlength: {\n    id: 'validation.error.maxlength',\n    defaultMessage: 'Max length is {number} characters.',\n  },\n  validationErrorWrongLength: {\n    id: 'validation.error.wrongLength',\n    defaultMessage: 'Length of the field should be {number}.',\n  },\n  validationErrorMin: {\n    id: 'validation.error.min',\n    defaultMessage: 'Min value is {number}.',\n  },\n  validationErrorMax: {\n    id: 'validation.error.max',\n    defaultMessage: 'Max value is {number}.',\n  },\n  validationErrorPattern: {\n    id: 'validation.error.pattern',\n    defaultMessage: '{name} contains invalid characters.',\n  },\n  validationErrorEmail: {\n    id: 'validation.error.email',\n    defaultMessage: 'Please enter a valid email address.',\n  },\n  validationErrorDuplicated: {\n    id: 'validation.error.duplicated',\n    defaultMessage: 'This {name} already exists.',\n  },\n  validationErrorPhone: {\n    id: 'validation.error.phone',\n    defaultMessage: 'Please enter a valid phone number.',\n  },\n  validationErrorNumber: {\n    id: 'validation.error.number',\n    defaultMessage: 'Please enter a valid number.',\n  },\n  validationErrorDate: {\n    id: 'validation.error.date',\n    defaultMessage: 'Please enter a valid date.',\n  },\n  validationErrorMaxSize: {\n    id: 'validation.error.maxSize',\n    defaultMessage: 'Max size is {maxSize}, file size is {size}',\n  },\n  validationErrorZip: {\n    id: 'validation.error.zip',\n    defaultMessage: 'Wrong zip code format',\n  },\n  validationErrorFormat: {\n    id: 'validation.error.format',\n    defaultMessage: 'Wrong format',\n  },\n  validationErrorSame: {\n    id: 'validation.error.same',\n    defaultMessage: 'Fields \"{name}\" and \"{dependency}\" must be the same.',\n  },\n  validationErrorPasswordPattern: {\n    id: 'validation.error.password.pattern',\n    defaultMessage: 'Your password must include at least one uppercase letter and one digit.',\n  },\n  validationErrorPpasswordLength: {\n    id: 'validation.error.password.length',\n    defaultMessage: 'Your password must be at least 6 characters long.',\n  },\n  validationErrorNickname: {\n    id: 'validation.error.nickname',\n    defaultMessage: 'The nickname may contain only latin letters, digits and underscores (\"_\").',\n  },\n  validationErrorUsername: {\n    id: 'validation.error.username',\n    defaultMessage:\n      'The username may contain only latin letters, digits, underscores (\"_\"), dots (\".\") and dashes (\"-\").',\n  },\n  validationErrorPhoneNumber: {\n    id: 'validation.error.phoneNumber',\n    defaultMessage: 'Please enter a valid phone number.',\n  },\n  validationErrorValid: {\n    id: 'validation.error.valid',\n    defaultMessage: 'Please enter a valid {name}.',\n  },\n  validationErrorComment: {\n    id: 'validation.error.comment',\n    defaultMessage: 'Please enter a some text.',\n  },\n  validationErrorDelete: {\n    id: 'validation.error.delete',\n    defaultMessage: 'Please enter \"delete\" word.',\n  },\n});\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {toast} from 'react-toastify';\nimport {injectIntl, useIntl} from 'react-intl';\nimport {useForm} from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppContext} from '../../../store';\nimport validationMessages from '../../../translations/validationErrors.messages';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '10px',\n  },\n  title: {\n    marginBottom: '20px',\n  },\n  action: {\n    textAlign: 'right'\n  },\n}));\n\nconst CompanyCreateForm = observer(() => {\n  const {companiesStore, modalStore} = React.useContext(AppContext);\n  const {handleSubmit, register, errors} = useForm();\n  const intl = useIntl();\n  const classes = useStyles();\n\n  const onSubmit = value => {\n    companiesStore\n      .createCompany(value)\n      .then(() => {\n        modalStore.close('companyCreate');\n        toast.success('Компания успешна создана');\n      })\n      .catch(error => {\n        const errors = Object.keys(error).map(err => {\n          return error[err][0];\n        });\n        toast.error(errors.join(` \\n`));\n      });\n  };\n\n  return (\n    <form className={classes.root} noValidate onSubmit={handleSubmit(onSubmit)}>\n      <Typography className={classes.title} variant=\"h6\" gutterBottom>\n        Добавить клиента\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"name\"\n            name=\"name\"\n            label=\"Наименование компании\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Name'}),\n            })}\n            error={!!errors.name}\n            helperText={!!errors.name ? errors.name.message : null}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"shortname\"\n            name=\"shortname\"\n            label=\"Короткое название\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Shortname'}),\n            })}\n            error={!!errors.shortname}\n            helperText={!!errors.shortname ? errors.shortname.message : null}\n          />\n        </Grid>\n        {/*\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"type\"\n            name=\"type\"\n            label=\"Тип юр. лица\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Type'}),\n            })}\n            error={!!errors.type}\n            helperText={!!errors.type ? errors.type.message : null}\n          />\n        </Grid>\n        */}\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"bin_iin\"\n            name=\"bin_iin\"\n            label=\"Сфера деятельности\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Type'}),\n            })}\n            error={!!errors.bin_iin}\n            helperText={!!errors.bin_iin ? errors.bin_iin.message : null}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"region\"\n            name=\"region\"\n            label=\"Регион\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Region'}),\n            })}\n            error={!!errors.region}\n            helperText={!!errors.region ? errors.region.message : null}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"city\"\n            name=\"city\"\n            label=\"Город\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'City'}),\n            })}\n            error={!!errors.city}\n            helperText={!!errors.city ? errors.city.message : null}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"email\"\n            name=\"email\"\n            label=\"E-mail\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Email'}),\n            })}\n            error={!!errors.email}\n            helperText={!!errors.email ? errors.email.message : null}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            variant=\"outlined\"\n            id=\"phone\"\n            name=\"phone\"\n            label=\"Телефон\"\n            fullWidth\n            inputRef={register({\n              required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Phone'}),\n            })}\n            error={!!errors.phone}\n            helperText={!!errors.phone ? errors.phone.message : null}\n          />\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <TextField\n            variant=\"outlined\"\n            id=\"description\"\n            name=\"description\"\n            label=\"Дополнительно (описание)\"\n            fullWidth\n            multiline\n            rows={4}\n            inputRef={register()}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.action}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Добавить\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n});\n\nexport default injectIntl(CompanyCreateForm);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport Modal from '../../../components/Modal';\nimport CompanyCreateForm from '../../company/CompanyCreateForm';\nimport {AppContext} from '../../../store';\n\nconst CompanyCreateModal = observer(() => {\n  const {modalStore} = React.useContext(AppContext);\n  const {open} = modalStore.modals.companyCreate;\n\n  return (\n    <Modal className='company-create' open={open} onClose={() => modalStore.close('companyCreate')}>\n      <CompanyCreateForm />\n    </Modal>\n  );\n});\n\nexport default CompanyCreateModal;\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport CompanyCreateModal from './CompanyCreateModal';\n\nconst Modals = observer(() => (\n  <React.Fragment>\n    <CompanyCreateModal />\n  </React.Fragment>\n));\n\nexport default Modals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AppContext} from '../../store';\n\nconst PrivateRoute = observer(({component: Component, ...rest}) => {\n  const {userStore} = React.useContext(AppContext);\n  const {isUserLogged, isProfileLoading} = userStore;\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        // eslint-disable-next-line no-nested-ternary\n        isUserLogged ? (\n          <Component {...props} />\n        ) : isProfileLoading ? null : (\n          <Redirect\n            to={{\n              pathname: '/login',\n            }}\n          />\n        )\n      }\n    />\n  );\n});\n\nPrivateRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AppContext} from '../../store';\n\nconst PublicRoute = observer(({component: Component, ...rest}) => {\n  const {userStore} = React.useContext(AppContext);\n  const {isUserLogged, isProfileLoading} = userStore;\n\n  const preloader = <div className=\"site-preloader\" />;\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        // eslint-disable-next-line no-nested-ternary\n        isUserLogged ? (\n          <Redirect\n            to={{\n              pathname: '/companies/list',\n            }}\n          />\n        ) : isProfileLoading ? (\n          preloader\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n});\n\nPublicRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport _ from 'lodash';\nimport {AppContext} from '../../../store';\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    backgroundColor: '#fff',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n    color: '#000'\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  title: {\n    color: '#000',\n  },\n}));\n\nconst Topbar = observer(props => {\n  const classes = useStyles();\n  const {mobileMenuStore, companiesStore, modalStore} = React.useContext(AppContext);\n  const {companyDetails} = companiesStore;\n\n  const handleDrawerToggle = () => {\n    mobileMenuStore.triggerMobileMenu();\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            {!_.isEmpty(companyDetails) ? `Клиент - ${companyDetails.name}`  : 'Клиенты'}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={() => modalStore.open('companyCreate')}\n          >\n            Добавить\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n});\n\nTopbar.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, NavLink} from 'react-router-dom';\nimport {observer} from 'mobx-react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport {AppContext} from '../../../store';\nimport './AsideMenu.scss'\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    [theme.breakpoints.up('md')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  logo: {\n    width: '100%',\n    padding: '10px 20px',\n  },\n}));\n\nconst AsideMenu = observer(props => {\n  const {window} = props;\n  const {userStore, mobileMenuStore} = React.useContext(AppContext);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleDrawerToggle = () => {\n    mobileMenuStore.triggerMobileMenu();\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Link to=\"/companies/list\">\n          <img className={classes.logo} src={require('../../../assets/images/logo.png')} alt=\"logo\" />\n        </Link>\n      </div>\n      <List>\n        <NavLink className=\"account-nav__item\" to={'/companies/list'}>\n          <ListItem button>\n            <ListItemIcon>\n              <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText>Клиенты</ListItemText>\n          </ListItem>\n        </NavLink>\n        <ListItem button onClick={() => userStore.logout()}>\n          <ListItemIcon>\n            <ExitToAppIcon />\n          </ListItemIcon>\n          <ListItemText primary='Выход' />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <React.Fragment>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileMenuStore.isOpenMobileMenu}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden smDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </React.Fragment>\n  );\n});\n\nAsideMenu.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default AsideMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {injectIntl} from 'react-intl';\nimport {Helmet} from 'react-helmet-async';\n// import messages from './Title.messages';\nimport htmlClass from '../../utils/htmlClass';\n\nconst Title = props => {\n  const {id} = props;\n\n  React.useEffect(() => {\n    addPageClassToBody(id);\n\n    return () => {\n      removePageClassFromBody();\n    };\n  });\n\n  const addPageClassToBody = page => {\n    removePageClassFromBody();\n    htmlClass.add(document.body, `page--${page}`);\n  };\n\n  const removePageClassFromBody = () => {\n    htmlClass.remove(document.body, /^page--/);\n  };\n\n  return (\n    <Helmet>\n      <title>{id}</title>\n      <meta name=\"description\" content={id} />\n      <link rel=\"canonical\" href=\"https://www.dealroomevents.com/\" />\n    </Helmet>\n  );\n};\n\nTitle.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(Title);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {injectIntl} from 'react-intl';\nimport {useForm, Controller} from 'react-hook-form';\nimport {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Refresh from '@material-ui/icons/Refresh';\nimport {AppContext} from '../../../store';\n\nconst allOptions = [];\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    padding: '15px',\n  },\n  reset: {\n    width: '6%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  filter: {\n    width: '95%',\n    margin: '0',\n  },\n  formControl: {\n    minWidth: 120,\n    width: '100%',\n  },\n}));\n\nconst CompaniesFilter = observer(() => {\n  const {companiesStore} = React.useContext(AppContext);\n  const {companyList, companyListByFilter, enableFilterCompanies} = companiesStore;\n  const classes = useStyles();\n  const {reset, control} = useForm();\n  const list = enableFilterCompanies ? companyListByFilter : companyList;\n\n  const resetFilter = event => {\n    reset();\n    companiesStore.resetFilter();\n  };\n\n  if (allOptions.length === 0) {\n    list.filter(item => !!item.region).map(row => allOptions.push(row.region));\n  }\n\n  const uniqOptions = Array.from(new Set(allOptions));\n\n  return (\n    <form className={classes.form} noValidate>\n      <Grid className={classes.filter} container spacing={2}>\n        <Grid item xs={12} sm={6} md={3}>\n          <Controller\n            name=\"filter-name\"\n            render={({value, onChange}) => (\n              <TextField\n                value={value}\n                id=\"filter-name\"\n                label=\"Наименование компании\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => {\n                  onChange(e.target.value);\n                  companiesStore.setFilter(e.target.value, 'name');\n                }}\n              />\n            )}\n            onChange={data => data}\n            control={control}\n            defaultValue=\"\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"filter-region-label\">Тип юр. лица</InputLabel>\n            <Controller\n              name=\"filter-type\"\n              render={({value, onChange}) => (\n                <Select\n                  labelId=\"filter-region-label\"\n                  id=\"filter-type\"\n                  value={value}\n                  onChange={e => {\n                    onChange(e.target.value);\n                    companiesStore.setFilter(e.target.value, 'region');\n                  }}\n                  label=\"Тип юр. лица\"\n                  autoWidth\n                >\n                  {uniqOptions.map((row, i) => {\n                    return (\n                      <MenuItem key={i} value={row}>\n                        {row}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              )}\n              onChange={data => data}\n              control={control}\n              defaultValue=\"\"\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"filter-region-label\">Регион</InputLabel>\n            <Controller\n              name=\"filter-region\"\n              render={({value, onChange}) => (\n                <Select\n                  labelId=\"filter-region-label\"\n                  id=\"filter-region\"\n                  value={value}\n                  onChange={e => {\n                    onChange(e.target.value);\n                    companiesStore.setFilter(e.target.value, 'region');\n                  }}\n                  label=\"Регион\"\n                  autoWidth\n                >\n                  {uniqOptions.map((row, i) => {\n                    return (\n                      <MenuItem key={i} value={row}>\n                        {row}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              )}\n              onChange={data => data}\n              control={control}\n              defaultValue=\"\"\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <Controller\n            name=\"filter-city\"\n            render={({value, onChange}) => (\n              <TextField\n                value={value}\n                id=\"filter-city\"\n                label=\"Город\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => {\n                  onChange(e.target.value);\n                  companiesStore.setFilter(e.target.value, 'city');\n                }}\n              />\n            )}\n            onChange={data => data}\n            control={control}\n            defaultValue=\"\"\n          />\n        </Grid>\n      </Grid>\n      <Grid className={classes.reset}>\n        <IconButton color=\"primary\" component=\"span\" onClick={resetFilter}>\n          <Refresh />\n        </IconButton>\n      </Grid>\n    </form>\n  );\n});\n\nexport default injectIntl(CompaniesFilter);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {injectIntl} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport {toast} from 'react-toastify';\nimport {AppContext} from '../../../store';\nimport CompaniesFilter from '../CompaniesFilter';\n\nconst columns = [\n  {id: 'name', label: 'Наименование компании'},\n  {id: 'population', label: 'Тип юр.лица'},\n  {id: 'region', label: 'Регион'},\n  {id: 'city', label: 'Город'},\n  {id: 'action', label: ''},\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  preloader: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '50px',\n  },\n  actions: {\n    padding: '5px',\n  },\n}));\n\nconst CompaniesTable = observer(() => {\n  const {companiesStore} = React.useContext(AppContext);\n  const {companyList, companyListByFilter, enableFilterCompanies} = companiesStore;\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [open, setOpen] = React.useState(false);\n  const [idRemove, setIdRemove] = React.useState(null);\n  const list = enableFilterCompanies ? companyListByFilter : companyList;\n\n  React.useEffect(() => {\n    companiesStore.getCompanyList();\n  }, [companiesStore]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleClickOpen = id => {\n    setIdRemove(id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOk = () => {\n    companiesStore\n      .deleteCompany(idRemove)\n      .then(() => {\n        toast.success('Компания удаленна!');\n      })\n      .catch(error => {\n        toast.error('Ошибка.');\n      });\n    setOpen(false);\n  };\n\n  const confirmModalDelete = (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle id=\"alert-dialog-title\">Вы точно уверенны что хотите удалить компанию?</DialogTitle>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Нет\n        </Button>\n        <Button onClick={handleOk} color=\"primary\" autoFocus>\n          Да\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return companyList.length > 0 ? (\n    <Paper className={classes.root}>\n      <CompaniesFilter />\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell key={column.id} style={{minWidth: column.minWidth}}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.type}</TableCell>\n                  <TableCell>{row.region}</TableCell>\n                  <TableCell>{row.city}</TableCell>\n                  <TableCell className={classes.actions} align=\"right\">\n                    <Tooltip title=\"Редактировать\">\n                      <Link to={`/company/${row.id}`}>\n                        <IconButton aria-label=\"edit\">\n                          <EditIcon />\n                        </IconButton>\n                      </Link>\n                    </Tooltip>\n                    <Tooltip title=\"Удалить\">\n                      <IconButton onClick={() => handleClickOpen(row.id)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 20, 50]}\n        component=\"div\"\n        count={companyList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n      {confirmModalDelete}\n    </Paper>\n  ) : (\n    <div className={classes.preloader}>\n      <CircularProgress />\n    </div>\n  );\n});\n\nexport default injectIntl(CompaniesTable);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {injectIntl} from 'react-intl';\nimport Title from '../../components/Title';\nimport CompaniesTable from '../../containers/company/CompaniesTable';\n\nconst CompaniesList = observer(() => {\n  return (\n    <React.Fragment>\n      <Title id=\"company-list\" />\n      <div className=\"companies-page\">\n        <div className=\"wrapper\">\n          <CompaniesTable />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default injectIntl(CompaniesList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {injectIntl} from 'react-intl';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default injectIntl(TabPanel);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {injectIntl} from 'react-intl';\nimport {Controller} from 'react-hook-form';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport _ from 'lodash';\n// import validationMessages from '../../../translations/validationErrors.messages';\n\nconst CompanyMainDetailsForm = observer(props => {\n  const {company, error} = props;\n  const {name, shortname, workscope, region, city, email, phone, description} = company;\n\n  return !_.isEmpty(company) ? (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Основная информация\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Controller\n            name=\"name\"\n            as={\n              <TextField\n                id=\"name\"\n                label=\"Наименование компании\"\n                variant=\"outlined\"\n                fullWidth\n                error={!!error.name}\n                helperText={!!error.name ? error.name.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={name}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"shortname\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"shortname\"\n                label=\"Короткое название\"\n                fullWidth\n                error={!!error.shortname}\n                helperText={!!error.shortname ? error.shortname.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={shortname}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"workscope\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"workscope\"\n                label=\"Сфера деятельности\"\n                fullWidth\n                error={!!error.bin_iin}\n                helperText={!!error.bin_iin ? error.bin_iin.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={workscope}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"region\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"region\"\n                label=\"Регион\"\n                fullWidth\n                error={!!error.region}\n                helperText={!!error.region ? error.region.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={region}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"city\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"city\"\n                label=\"Город\"\n                fullWidth\n                error={!!error.city}\n                helperText={!!error.city ? error.city.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={city}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"email\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"email\"\n                label=\"E-mail\"\n                fullWidth\n                error={!!error.email}\n                helperText={!!error.email ? error.email.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={email}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"phone\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"phone\"\n                label=\"Телефон\"\n                fullWidth\n                error={!!error.phone}\n                helperText={!!error.phone ? error.phone.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={phone}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Controller\n            name=\"description\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"description\"\n                label=\"Дополнительно (описание)\"\n                fullWidth\n                multiline\n                rows={4}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={description}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  ) : null;\n});\n\nexport default injectIntl(CompanyMainDetailsForm);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {injectIntl} from 'react-intl';\nimport {Controller} from 'react-hook-form';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport _ from 'lodash';\n// import validationMessages from '../../../translations/validationErrors.messages';\n\nconst CompanyLegalDetailsForm = observer(props => {\n  const {company, error} = props;\n  const {\n    registered_name,\n    registered_type,\n    bin_iin,\n    leader,\n    leader_position,\n    registered_address,\n    address,\n    tax_payer,\n  } = company;\n\n  return !_.isEmpty(company) ? (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Реквизиты компании\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Controller\n            name=\"registered_name\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"registered_name\"\n                label=\"Наименование юр.лица\"\n                fullWidth\n                error={!!error.registered_name}\n                helperText={!!error.registered_name ? error.registered_name.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={registered_name}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"registered_type\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"registered_type\"\n                label=\"Тип юр. лица\"\n                fullWidth\n                error={!!error.registered_type}\n                helperText={!!error.registered_type ? error.registered_type.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={registered_type}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"bin_iin\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"bin_iin\"\n                label=\"БИН/ИИН\"\n                fullWidth\n                error={!!error.bin_iin}\n                helperText={!!error.bin_iin ? error.bin_iin.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={bin_iin}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"leader\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"leader\"\n                label=\"Руководитель\"\n                fullWidth\n                error={!!error.leader}\n                helperText={!!error.leader ? error.leader.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={leader}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"leader_position\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"leader_position\"\n                label=\"Должность руководителя\"\n                fullWidth\n                error={!!error.leader_position}\n                helperText={!!error.leader_position ? error.leader_position.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={leader_position}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"registered_address\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"registered_address\"\n                label=\"Юридический адресс\"\n                fullWidth\n                error={!!error.registered_address}\n                helperText={!!error.registered_address ? error.registered_address.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={registered_address}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Controller\n            name=\"address\"\n            as={\n              <TextField\n                variant=\"outlined\"\n                id=\"address\"\n                label=\"Фактический адресс\"\n                fullWidth\n                error={!!error.address}\n                helperText={!!error.address ? error.address.message : null}\n              />\n            }\n            rules={{required: true}}\n            defaultValue={address}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Controller\n            name=\"tax_payer\"\n            render={props => (\n              <FormControlLabel\n                control={<Switch onChange={e => props.onChange(e.target.checked)} checked={props.value} />}\n                label=\"Плательщик НДС (да/нет)\"\n              />\n            )}\n            defaultValue={tax_payer}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  ) : null;\n});\n\nexport default injectIntl(CompanyLegalDetailsForm);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {toast} from 'react-toastify';\nimport {injectIntl} from 'react-intl';\nimport {useForm, FormProvider} from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CompanyMainDetailsForm from '../CompanyMainDetailsForm';\nimport CompanyLegalDetailsForm from '../CompanyLegalDetailsForm';\nimport {AppContext} from '../../../store';\nimport _ from 'lodash';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  preloader: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '50px',\n  },\n  action: {\n    textAlign: 'right'\n  }\n}));\n\nconst CompanyInfo = observer(() => {\n  const {companiesStore, modalStore} = React.useContext(AppContext);\n  const {companyDetails} = companiesStore;\n  const methods = useForm();\n  const classes = useStyles();\n\n  const onSubmit = value => {\n    companiesStore\n      .updateCompany(companyDetails.id, value)\n      .then(() => {\n        modalStore.close('companyCreate');\n        toast.success('Компания успешна обновлнна');\n      })\n      .catch(error => {\n        const errors = Object.keys(error).map(err => {\n          return error[err][0];\n        });\n        toast.error(errors.join(` \\n`));\n      });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form noValidate onSubmit={methods.handleSubmit(onSubmit)}>\n        {!_.isEmpty(companyDetails) ? (\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6}>\n              <CompanyMainDetailsForm error={methods.errors} company={companyDetails} />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <CompanyLegalDetailsForm error={methods.errors} company={companyDetails} />\n            </Grid>\n            <Grid item xs={12} className={classes.action}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Сохранить\n              </Button>\n            </Grid>\n          </Grid>\n        ) : (\n          <div className={classes.preloader}>\n            <CircularProgress />\n          </div>\n        )}\n      </form>\n    </FormProvider>\n  );\n});\n\nexport default injectIntl(CompanyInfo);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {injectIntl} from 'react-intl';\nimport {toast} from 'react-toastify';\nimport MaterialTable from 'material-table';\nimport {AppContext} from '../../../store';\n\nconst CompanyBankDetailsTable = observer(() => {\n  const {companiesStore} = React.useContext(AppContext);\n  const {bankList, companyDetails} = companiesStore;\n  const [loading, setLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoading(true)\n    companiesStore.bankDetailListForCompany(companyDetails.id).then(() => setLoading(false));\n  }, [companiesStore, companyDetails.id]);\n\n  const columns = [\n    {title: 'Банк', field: 'bank'},\n    {title: 'БИК', field: 'bank_id_code'},\n    {title: 'Номер счета', field: 'account_number'},\n    {title: 'Валюта', field: 'currency'},\n  ];\n\n  return (\n    <MaterialTable\n      title=\"Банковские реквизиты компании\"\n      localization={{body: {editRow: {deleteText: 'Вы точно хотите удалить компанию?'}}}}\n      columns={columns}\n      data={bankList || []}\n      isLoading={loading}\n      editable={{\n        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              companiesStore\n                .addBankDetail(companyDetails.id, newData)\n                .then(() => {\n                  toast.success('Банковские данные добавленны!');\n                })\n                .catch(error => {\n                  toast.error('Ошибка.');\n                });\n              resolve();\n            }, 1000);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              companiesStore\n                .updateBankDetail(companyDetails.id, newData)\n                .then(() => {\n                  toast.success('Банковские данные обновленны!');\n                })\n                .catch(error => {\n                  toast.error('Ошибка.');\n                });\n              resolve();\n            }, 1000);\n          }),\n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              companiesStore\n                .deleteBankDetail(companyDetails.id, oldData)\n                .then(() => {\n                  toast.success('Банковские данные удаленны!');\n                })\n                .catch(error => {\n                  toast.error('Ошибка.');\n                });\n              resolve();\n            }, 1000);\n          }),\n      }}\n    />\n  );\n});\n\nexport default injectIntl(CompanyBankDetailsTable);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {useParams} from 'react-router-dom';\nimport {injectIntl} from 'react-intl';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {AppContext} from '../../store';\nimport Title from '../../components/Title';\nimport TabPanel from '../../components/TabPanel'\nimport CompanyInfo from '../../containers/company/CompanyInfo';\nimport CompanyBankDetailsTable from '../../containers/company/CompanyBankDetailsTable';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst CompanyContent = observer(() => {\n  const {companiesStore} = React.useContext(AppContext);\n  const {companyId} = useParams();\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  React.useEffect(() => {\n    companiesStore.getCompanyDetails(companyId);\n\n    return () => {\n      companiesStore.reset();\n    };\n  }, [companiesStore, companyId]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n      <Title id=\"company-details\" />\n      <div className=\"company-page\">\n        <div className={classes.root}>\n          <AppBar position=\"static\" color=\"default\">\n            <Tabs value={value} onChange={handleChange}   indicatorColor=\"primary\"\n                  textColor=\"primary\">\n              <Tab label=\"Информация\" {...a11yProps(0)} />\n              <Tab label=\"Банковские реквизиты\" {...a11yProps(1)} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={value} index={0}>\n            <CompanyInfo />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <CompanyBankDetailsTable />\n          </TabPanel>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default injectIntl(CompanyContent);\n","import React, {memo} from 'react';\nimport {Link} from 'react-router-dom';\nimport './NotFound.scss';\n\nexport default memo(() => (\n  <div className=\"not-found\">\n    <div className=\"not-found__wrapper\">\n      <h2 className=\"not-found__404\">Oops! Error 404</h2>\n\n      <div className=\"not-found__content\">\n        <h1 className=\"not-found__title\">Page Not Found</h1>\n\n        <p className=\"not-found__text\">We can&apos;t seem to find the page you&apos;re looking for.</p>\n\n        <p className=\"not-found__text\">Go to the lobby page to start over.</p>\n\n        <Link to=\"/\" className=\"ui primary button\">\n          Go To Lobby Page\n        </Link>\n      </div>\n    </div>\n  </div>\n));\n","import React from 'react';\nimport {Redirect, Switch, Route} from 'react-router-dom';\nimport {observer} from 'mobx-react';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Topbar from '../../containers/shared/Topbar';\nimport AsideMenu from '../../containers/shared/AsideMenu';\nimport CompaniesList from '../../pages/CompaniesList';\nimport CompanyContent from '../../pages/CompanyContent';\nimport NotFound from '../../pages/NotFound';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    height: '100%',\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: '50px',\n    [theme.breakpoints.down('sm')]: {\n      padding: '20px',\n    },\n    backgroundColor: '#f0f0f0',\n  },\n}));\n\nconst MainDecorator = observer(() => {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.root}>\n      <Topbar/>\n      <AsideMenu />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/companies/list\" />\n          <Route path=\"/companies/list\" component={CompaniesList} exact />\n          <Route path=\"/company/:companyId\" component={CompanyContent} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n    </main>\n  );\n});\n\nexport default MainDecorator;\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {useForm} from 'react-hook-form';\nimport {injectIntl} from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppContext} from '../../../store';\nimport validationMessages from '../../../translations/validationErrors.messages';\n//import messages from './LoginForm.messages';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    maxWidth: '400px',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  margin: {\n    marginTop: '15px',\n  },\n  errors: {\n    color: 'red',\n  },\n  action: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n}));\n\nconst LoginForm = observer(props => {\n  const {intl} = props;\n  const {userStore} = React.useContext(AppContext);\n  const {isLoading} = userStore;\n  const {handleSubmit, register, errors} = useForm();\n  const [showPassword, setShowPassword] = React.useState(false);\n  const classes = useStyles();\n\n  React.useEffect(\n    () => () => {\n      userStore.cleanError();\n    },\n    [userStore],\n  );\n\n  const onSubmit = value => {\n    userStore.login(value);\n  };\n\n  const onTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Авторизация\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n            <FormControl className={classes.margin} variant=\"outlined\" fullWidth>\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\n              <OutlinedInput\n                inputRef={register({\n                  required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'E-mail'}),\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: intl.formatMessage(validationMessages.validationErrorEmail),\n                  },\n                })}\n                required\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                error={!!errors.email}\n              />\n              <FormHelperText id=\"component-error-text\" className={classes.errors}>\n                {!!errors.email ? errors.email.message : null}\n              </FormHelperText>\n            </FormControl>\n            <FormControl className={classes.margin} variant=\"outlined\" fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <OutlinedInput\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={onTogglePassword}\n                      onMouseDown={onTogglePassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                inputRef={register({\n                  required: intl.formatMessage(validationMessages.validationErrorRequired, {name: 'Password'}),\n                  minLength: {\n                    value: 8,\n                    message: intl.formatMessage(validationMessages.validationErrorMinlength, {number: 8}),\n                  },\n                })}\n                required\n                name=\"password\"\n                label=\"Password\"\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                autoComplete=\"current-password\"\n                error={!!errors.password}\n              />\n              <FormHelperText id=\"component-error-text\" className={classes.errors}>\n                {!!errors.password ? errors.password.message : null}\n              </FormHelperText>\n            </FormControl>\n            <div className={classes.action}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n                {isLoading ? 'Загрузка' : 'Войти'}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n});\n\nexport default injectIntl(LoginForm);\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport LoginForm from '../../containers/shared/LoginForm';\n\nconst Login = observer(() => (\n  <div className=\"login\">\n    <LoginForm />\n  </div>\n));\n\nexport default Login;\n","import React from 'react';\nimport {IntlProvider} from 'react-intl';\nimport PropTypes from 'prop-types';\nimport {observer} from 'mobx-react';\nimport ru from './translations/languages/ru.json';\nimport en from './translations/languages/en.json';\n\nif (!Intl.PluralRules) {\n  require('@formatjs/intl-pluralrules/polyfill');\n  require('@formatjs/intl-pluralrules/dist/locale-data/en');\n  require('@formatjs/intl-pluralrules/dist/locale-data/ru');\n}\n\nif (!Intl.RelativeTimeFormat) {\n  require('@formatjs/intl-relativetimeformat/polyfill');\n  require('@formatjs/intl-relativetimeformat/dist/locale-data/en');\n  require('@formatjs/intl-relativetimeformat/dist/locale-data/ru');\n}\n\nconst messages = {\n  en,\n  ru,\n};\n\nconst Localizer = observer(({children, locale}) => (\n  <IntlProvider locale={locale} messages={messages[locale]}>\n    {children}\n  </IntlProvider>\n));\n\nLocalizer.propTypes = {\n  children: PropTypes.element.isRequired,\n  locale: PropTypes.string.isRequired,\n};\n\nexport default Localizer;\n","import {createMuiTheme} from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#0078FA',\n    },\n  },\n});\n\nexport default theme\n","import * as React from 'react';\nimport {observer} from 'mobx-react';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\nimport {HelmetProvider} from 'react-helmet-async';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport addMainClasses from '../utils/addMainClasses';\nimport {AppContext} from '../store';\nimport Notifications from '../containers/shared/Notifications';\nimport Modals from '../containers/modals';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport MainDecorator from './MainDecorator';\nimport Login from '../pages/Login';\nimport Localizer from '../Localizer';\nimport theme from '../theme';\n\nconst AppRoot = observer(() => {\n  const {languageStore, userStore} = React.useContext(AppContext);\n  // const preloader = document.querySelector('.site-preloader');\n\n  // preloader\n  /*\n  if (!userStore.isLoading && preloader) {\n    preloader.addEventListener('transitionend', event => {\n      if (event.propertyName === 'opacity' && preloader.parentNode) {\n        preloader.parentNode.removeChild(preloader);\n      }\n    });\n    preloader.classList.add('site-preloader__fade');\n  }\n  */\n\n  return (\n    <Localizer locale={languageStore.language}>\n      <HelmetProvider>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <div className=\"main\">\n              {addMainClasses(userStore)}\n              <Notifications />\n              <Modals />\n              <Switch>\n                <PublicRoute path=\"/login\" component={Login} exact />\n                <PrivateRoute component={MainDecorator} exact />\n              </Switch>\n            </div>\n          </Router>\n        </ThemeProvider>\n      </HelmetProvider>\n    </Localizer>\n  );\n});\n\nexport default AppRoot;\n","import htmlClass from './htmlClass';\n\nexport default function addMainClasses(userStore) {\n  if (userStore.isUserLogged) {\n    htmlClass.add(document.body, 'is-logged-in');\n    htmlClass.remove(document.body, 'is-logged-out');\n  } else {\n    htmlClass.add(document.body, 'is-logged-out');\n    htmlClass.remove(document.body, 'is-logged-in');\n  }\n\n  const {userAgent} = window.navigator;\n  if (userAgent.match(/iPhone/i) || userAgent.match(/iPad/i)) {\n    htmlClass.add(document.body, 'is-ios');\n  } else {\n    htmlClass.remove(document.body, 'is-ios');\n  }\n\n  return null;\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import './styles/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createBrowserHistory as createHistory} from 'history';\nimport {AppContext, stores} from './store';\nimport AppRoot from './decorators';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createHistory();\n\nReactDOM.render(\n  <AppContext.Provider value={stores}>\n    <AppRoot history={history} />\n  </AppContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
